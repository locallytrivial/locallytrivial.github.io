[{"categories":null,"content":"A Little About Me The profound connection between physics and mathematics is a guiding light for me. Underlying seemingly disparate fields of the natural sciences, these common mathematical structures possess a sublime power and precision, especially when coupled with computational methods. My goal is to truly understand them, employ them, and enjoy the ride. There is geometry in the humming of strings. There is music in the spacing of spheres. - Pythagoras Presently, I’m a Mildred Dresselhaus Graduate Fellow at Penn State University studying theoretical physics, and working in the Institute for Gravitation and the Cosmos. Before grad school, I worked for a while as a quantative developer and researcher at an asset management firm, specializing in medium-frequency, distributed signal analysis frameworks. For undergrad, I spent time at both the U.S. Naval Academy and the University of Texas at Austin, studying nonlinear dynamical systems and cosmology. Research Interests My research interests broadly include classical and quantum gravity. Specifically, I focus on gravitational wave detection methods using information geometry. I am a member of the LIGO Scientific Collaboration. I am also interested in naturally discrete approaches to quantum gravity, including canonical quantum gravity (loops), covariant spinfoams, causal dynamical triangulations, and noncommutative geometry, with an emphasis on computational methods. Often, I find myself venturing into pure mathematical subjects, usually motivated by physical applications. Topics largely include commutative and noncommutative algebras, differential geometry, and information geometry. I co-founded a seminar series at Penn State, Mathematical Aspects of Physics Seminar, “MAP Chat”, as a way to share this interest with the community. Spin foam (Image Credit AEI) More Information For more information, see my Curriculum Vitae, publications, GitHub, blog, and general resources. ","date":"2021-10-23","objectID":"/about/:0:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Here I’ve listed and described my favorite maths texts by topic. See here for my favorite physics texts. For each of the books listed below, I either own it or have used it in a course. I’ll also mark each with a symbol to indicate the difficulty (I) for introductory, (M) for intermediate, and (A) for advanced. ","date":"2021-10-23","objectID":"/texts-math/:0:0","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Algebra Dummit and Foote Abstract Algebra (I) Hungerford Algebra (M) Lang Algebra (A) Mac Lane Categories for the Working Mathematician (M) Pinter A Book of Abstract Algebra (I) ","date":"2021-10-23","objectID":"/texts-math/:0:1","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Calculus Marsden Vector Calculus (M) Spivak Calculus (I) Stewart Calculus Early Transcendentals (I) ","date":"2021-10-23","objectID":"/texts-math/:0:2","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Combinatorics Diestel Graph Theory (M) Harris Combinatorics and Graph Theory (I) ","date":"2021-10-23","objectID":"/texts-math/:0:3","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Differential Equations Evans Partial Differential Equations (A) Haberman Applied Partial Differential Equations (M) Strauss Partial Differential Equations (M) Sundaram A First Course in Optimization Theory (I) ","date":"2021-10-23","objectID":"/texts-math/:0:4","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Geometry Do Carmo Differential Geometry of Curves and Surfaces (I) Lee Introduction to Smooth Manifolds (A) Lee Introduction to Riemannian Manifolds (A) Ratcliffe Foundations of Hyperbolic Manifolds (A) Spivak Differential Geometry (M) Tu Differential Geometry (M) ","date":"2021-10-23","objectID":"/texts-math/:0:5","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Linear Algebra Axler Linear Algebra Done Right (I) Das Tensors (M) Grinfeld Introduction to Tensor Analysis (I) Lang Linear Algebra (M) Rentlen Manifolds, Tensors, and Forms (M) Roman Advanced Linear Algebra (A) ","date":"2021-10-23","objectID":"/texts-math/:0:6","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Probability \u0026 Statistics Buhlmann Statistics for High-Dimensional Data (A) Brzezniak Basic Stochastic Processes (I) Casella Statistical Inference (A) De Veaux Stats: Data and Models (I) Durrett Probability: Theory and Examples (A) Halmos Measure Theory (M) Ross A First Course in Probability (M) ","date":"2021-10-23","objectID":"/texts-math/:0:7","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Representation Theory Fulton Representation Theory (A) Hall Lie Groups, Lie Algebras, and Representations (M) ","date":"2021-10-23","objectID":"/texts-math/:0:8","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Topology Crossley Essential Topology (I) Edelsbrunner and Harer Computational Topology (M) Ghrist Elementary Applied Topology (M) Hatcher Algebraic Topology (M) Lee Introduction to Topological Manifolds (A) Munkres Topology (M) ","date":"2021-10-23","objectID":"/texts-math/:0:9","tags":null,"title":"Math Texts","uri":"/texts-math/"},{"categories":null,"content":"Here I’ve listed and described my favorite physics texts by topic. See here for my favorite maths texts. For each of the books listed below, I either own it or have used it in a course. I’ll also mark each with a symbol to indicate the difficulty (I) for introductory, (M) for intermediate, and (A) for advanced. ","date":"2021-10-23","objectID":"/texts-physics/:0:0","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Basic Physics Feynman - The Feynman Lectures (I) The classic undergraduate three-volume set written by physics’ greatest elucidator. Tipler - Physics (I) More modern, all-encompasing volume for introductory physics courses. Ohanian - Modern Physics (I) Common reference for first courses in special relativity. Taylor - Introduction to Error Analysis (I) Standard introductory reference for experimental methodology, statistical analysis of data, and error propagation. ","date":"2021-10-23","objectID":"/texts-physics/:0:1","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Classical Mechanics Taylor -Classical Mechanics (I) Great undergraduate reference text, usually seen in an upper-division undergraduate mechanics course. Thornton, Marion - Classical Dynamics (M) Undergraduate level classical mechanics text, more advanced than Taylor. Goldstein - Classical Mechanics (A) The standard graduate-level text on mechanics. Arnold - Mathematical Methods of Classical Mechanics (A) Mathematical tools for classical mechanics. Notation is a bit old (and Russian), for instance $[A, B]$ is used for the vector cross product instead of $A \\times B$. Libermann, Marle - Symplectic Geometry and Analytical Mechanics (A) Excellent reprint of a text that analyses the symplectic structure of classical mechanics. Insofar as classical mechanics is truly geometry of phase space - this text presents a rigorous treatment of symplectic forms, spaces, and how they relate to Hamiltonian systems. Very rigorous. ","date":"2021-10-23","objectID":"/texts-physics/:0:2","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Electricity \u0026 Magnetism Griffiths - Introduction to Electrodynamics (I) Standard undergraduate level text on E\u0026M, frequently used for upper-division courses on electricity and magnetism. Interestingly, doesn’t include much on circuits. Jackson - Classical Electrodynamics (A) The standard graduate text on E\u0026M, a rite of passage. Baylis - Electrodynamics: A Modern Geometric Approach (A) Interesting advanced text that analyses the geometric implications of EM theory, including deriving the Minkowski metric from the Clifford algebra. Draws really nice connections between special relativity and Maxwell’s equations. Hehl - Foundations of Classical Electrodynamics (A) Excellent advanced reference on the detailed mathematical structure of electromagnetic theory, including exterior algebras and metric-free examination of Maxwell-Lorentz spacetime relations. Strong emphasis placed on axiomatic approach, considerable rigor. Scheck - Classical Field Theory: On Electrodynamics, Non-Abelian Gauge Theories and Gravitation (A) Interesting advanced text that analyses Maxwell’s equations as an example of a gauge theory, then develops generalized notions of gauge theory. Considers applications to gravity along the lines Weyl considered in the early days of GR. ","date":"2021-10-23","objectID":"/texts-physics/:0:3","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Classical Gravity (GR) Carroll - Spacetime and Geometry (I) Clean, modern reference that is relatively self-contained. Builds the essential differential geometry (quickly) before introducing gravitational concepts. Notation is very close to modern mathematical literature. Schutz - A First Course In General Relativity (I) Less modern introductory text to GR, worth reading after / with Carroll. Wald - General Relativity (M) Standard graduate level introduction to GR. Excellent exposition of mathematical aspects of GR with a medium amount of rigor. Does not discuss bundles, and only briefly mentions tetrads. Poisson - Gravity (M) Moderately advanced text covering details of Newtonian, Post-Newtonian approximation methods. Poisson - A Relativist’s Toolkit (A) Advanced techniques for applying GR to astrophysical situations, assumes a working knowledge of GR. Misner, Thornton, Wheeler (MTW) - Gravitation (A) Standard reference text, absolutely massive. Includes the most detail on the most topics out of any book on the subject, and is a useful reference for practitioners. Straumann - General Relativity (A) Great supplement reference at the graduate level. Shows full derivations of Schwarzschild and Kerr metrics, has great discussion on black hole thermodynamics. Also includes material of Cartan structure of the field equations and affine connections. Geroch - General Relativity: 1972 Lecture Notes (A) Geroch is a master. These lecture notes, while brief, expertly weave the mathematics and physics from a spacetime-first perspective using a wealth of visuals. Geroch shows how physical phenomena can be explained first in spacetime, then decomposed into space + time to recover familiar quantities. Chandrasekhar - The Mathematical Theory of Black Holes (A) One of the most rigorous treatises on black holes in existence, with pages upon pages of calculations. Excellent introduction to tetrad formalism as well as Newman-Penrose formalism. Covers basically any topic in black holes imaginable, including derivations / construction of Schwarzschild, Reissner-Nordstrom, and Kerr solutions, perturbations and effect on electromagnetic phenomena. ","date":"2021-10-23","objectID":"/texts-physics/:0:4","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Numerical Relativity (NR) Baumgarte - Numerical Relativity (M) Clean, modern introduction to NR, briefly reviews GR but most focus is on numerical considerations. Alcubierre - Introduction to 3 + 1 Numerical Relativity (A) Standard, in-depth reference on numerical relativity. ","date":"2021-10-23","objectID":"/texts-physics/:0:5","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Quantum Gravity (QG) Baez - Gauge Fields, Knots, and Gravity (I) If you can read one introductory book on gravity, make it this book. Baez has the unique ability to present enough detail to give the interested reader a foothold in related mathematical subjects while staying high-level enough to provide a coherent overview of the many related fields that appear in quantum gravity. Introduces vector field functional formalism, gauge fields and relations to local symmetries, elements of knot theory including crossings and windings, and how these apply to (loop) quantum gravity. Pullin - A First Course in Loop Quantum Gravity (I) A friendly introduction to LQG that doesn’t assume prior familiarity with either GR or QFT. While this book doesn’t go into a great deal of depth, it provides a concise, high-level view of what loop quantum gravity is and how it fits into the landscape of theoretical physics. Rovelli - Covariant Loop Quantum Gravity (M) A high-level text that introduces more detailed structure than the text above; however, this is mostly a summary for new researchers in the field that have some familiarity with LQG. Carlo’s inimitable style makes this an enjoyable read. Rovelli - Quantum Gravity (M) Graduate level text on loop quantum gravity; the starting point for any serious reading into LQG. Jumps pretty quickly past the GR essentials and into the tetrad formalism, introduces the concept of spin networks, intertwiners. Ashtekar - Lectures on Non-Perturbative Canonical Gravity (M) Excellent set of lecture notes from the eponymous discoverer of the spinorial formulation of GR. These are a must-have for any LQG reader. Thiemann - Modern Canonical Quantum General Relativity (A) The rigorous complement to Rovelli, a monolithic volume of mathematical detail. Discusses details of spaces of connections, bundle structures, and other aspects of the mathematical details of LQG. Gambini, Pullin - Loops, Knots, Gauge Theories and Quantum Gravity (A) Excellent, detailed reference for loop representations with applications to gauge theories and lattice techniques. Discusses applications to gravity including braid theories. Predates Rovelli and Thiemann, so final chapter is mostly interesting for understanding development of the current theory. ","date":"2021-10-23","objectID":"/texts-physics/:0:6","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Mathematical Physics Jeevanjee - An Introduction to Tensors and Group Theory for Physicists (I) Excellent introduction to the theory of groups and tensors, aimed at physics students. Self contained, Jeevanjee (properly) introduces tensors as multilinear maps, and derives all the familiar behavior including transformation “rules” and index mechanics. Introduces key concepts from Lie theory with just-enough rigor to prepare reader for further study, includes many examples from physics including SU(2), SO(3) and others. Introduces representations in a clear way as well. Cannot recommend highly enough. Isham - Modern Differential Geometry for Physicists (I) The lecture notes of a course taught by a renowned expert in quantum gravity on the mathematical preliminaries for classical gravity. Includes the standard intro to differential geometry; however, Isham also includes an excellent exposition of connections and bundles (which is usually missing from such texts). Isham also includes multiple perspectives on elementary definitions, unifying the various methods by which these concepts are conventionally introduced. Arfken - Mathematical Methods for Physicists (I) Standard reference text at the undergraduate level for mathematical methods. Has many examples of each technique introduced, but doesn’t introduce certain topics from the graduate level such as integral regularization. Balakrishnan - Mathematical Physics: Applications and Problems (M) Graduate level reference on mathematical methods from a renowned author of mathematical physics books. Goes into more depth than Arfken (as expected), including functional analysis, operators and algebras. Covers distributional derivatives. Rudolph, Schmidt - Differential Geometry and Mathematical Physics: Part I. Manifolds, Lie Groups and Hamiltonian Systems (A) Great, verbose reference for differential geometry and applications to physics. The first part covers manifolds and elementary lie theory with applications to Lagrangian mechanics. Rudolph, Schmidt - Differential Geometry and Mathematical Physics: Part II. Fibre Bundles, Topology and Gauge Fields (A) Second volume of a great reference on differential geometry, covering aspects that are often missing from gravitation texts including fiber and principal bundles, Clifford algebras and spin geometry, and gauge theory. ","date":"2021-10-23","objectID":"/texts-physics/:0:7","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Quantum Mechanics Griffiths - Introduction to Quantum Mechanics (I) Ubiquitous undergraduate text on quantum mechanics, covering the standard sequence of “shutup and calculate” quantum mechanics. Wavefunctions, some (unfortunately Copenhagen) interpretation, simple potentials, and basic properties of quantum systems. New edition has a chapter about symmetries and conserved quantities, a nice introduction to Noethers theorem. Cohen-Tannoudjhi - Quantum Mechanics (M) Three volume series at the graduate level on all aspects of quantum mechanics. Incredibly thorough, Cohen shows details that are omitted from most other quantum mechanics texts. The many supplemental chapters work through examples that bring a higher degree of clarity to QM topics. Volumes I and II cover standard graduate level quantum mechanics, formalism and simple potentials, angular momentum and algebraic implications, Shankar - Principles of Quantum Mechanics (M) Intermediate reference text on the mathematical aspects of quantum mechanics. Still focused largely on particle-based non-relativistic systems. More rigorous references included in “Quantum Theory” section below. Feynman and Hibbs - Quantum Mechanics and Path Integrals (A) Accessible introduction to the path integral formulation of quantum mechanics from the inimitable Feynman (who created the path integral approach). Sakurai - Modern Quantum Mechanics (A) Included for completeness, a standard graduate-level text. Much more terse than Cohen. The author only wrote the first three chapters, then the rest of the text was written posthumously from lecture notes by collaborators - I include this detail because it explains why the first three chapters are the best in the book - formalism, dynamics, and angular momentum. The remaining material I would recommend sourcing elsewhere. ","date":"2021-10-23","objectID":"/texts-physics/:0:8","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Quantum Field Theory (QFT) Zee - Quantum Field Theory in a Nutshell (M) Approachable introduction in a relaxed style, Zee provides a clear presentation of QFT essentials. Peskin, Shroeder - An Introduction to Quantum Field Theory (M) The standard, graduate level reference used in QFT courses. DeWitt - The Global Approach to Quantum Field Theory (A) Insightful two-volume set taking a unique approach to developing QFT. Weinberg - The Quantum Theory of Fields (A) Standard rigorous reference on QFT. Coleman - Lectures of Sidney Coleman on Quantum Field Theory (A) Set of advanced lectures from a renowned elucidator of QFT. ","date":"2021-10-23","objectID":"/texts-physics/:0:9","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Quantum Theory - eg. Foundations, Formalism Norsen - Foundations of Quantum Mechanics: An Exploration of the Physical Meaning of Quantum Theory (I) Accessible introduction to a field often omitted from the standard physics education - interpreting quantum theory. Norsen presents the main interpretations, Copenhagen, Many Worlds, Bohmian, Spontaneous Collapse. Excellently introduces ontological considerations as well as the measurement problem. Woit - Quantum Theory, Groups and Representations: An Introduction (A) Rigorous, unconventional approach to developing quantum theory. Woit eschews the standard approach of introducing classical systems first, then ‘quantising’ these systems with bad analogies. Instead, Woit develops intuition around the algebraic nature of quantum theory using examples that have no classical analogues. Excellent text with unique perspective. Hall - Quantum Theory for Mathematicians (A) Rigorous introduction to quantum theory aimed at mathematicians, using a Hilbert-space approach. Covers the role of Lie theory in quantum mechanics as well as a more rigorous presentation of path integrals. Landsman - Foundations of Quantum Theory: From Classical Concepts to Operator Algebras (A) Detailed (read: thick) exposition of operator algebras and the connection to classical Poisson structures. ","date":"2021-10-23","objectID":"/texts-physics/:0:10","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Statistical Mechanics \u0026 Thermodynamics I’ve not found a thermo book that included everything satisfactorily, but below are some that I’ve used in various courses. Schroeder - Introduction to Thermal Physics (I) Standard undergraduate thermodynamics book. Kardar - Statistical Physics of Particles (M) Clear, concise statistical mechanics and thermodynamics book at the graduate level. Derives the laws of thermodynamics in an abstract setting, includes several unique derivations (some are probably worth skipping). Kardar - Statistical Physics of Fields (A) Follow up volume to the one above, excellent discussion of Landau principles. Balakishnan - Elements of Nonequilibrium Statistical Mechanics (M) Great reference on nonequilibrium systems and their statistical properties. Berlinsky, Harris - Statistical Mechanics: An Introductory Graduate Course (A) Graduate level text focusing on more mathematical aspects of thermodynamics and statistical mechanics, including the renormalization group, Landau theory and mean field theory. Many examples considered including superconductivity and quantum fluids. ","date":"2021-10-23","objectID":"/texts-physics/:0:11","tags":null,"title":"Physics Texts","uri":"/texts-physics/"},{"categories":null,"content":"Here I’ve assembled links to various resources, some supplied by me, related to physics, maths, and several other areas of interest. I curated these lists initially as a reading checklist for myself; however, as I have found myself referring friends and colleagues to these items increasingly, it made sense to persist the information in a single page. ","date":"2021-10-23","objectID":"/resources/:0:0","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Literature The below are some interesting sources of reading material, both professional and colloquial. In no particular order, the items below span my favorite journals, ArXiv filters, popular-science summaries, and blogs by practitioners. I use the below as a personal checklist, my “what to read” queue, and I recommend each source whole-heartedly. I’m always looking for new sources, so please send me anything great you find not listed here! ","date":"2021-10-23","objectID":"/resources/:1:0","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Peer-Reviewed IOP Classical and Quantum Gravity APS Physical Review D ArXiv Physics Summary Blog ArXiv Topics: ArXiv General Relativity and Quantum Cosmology ArXiv Mathematical Physics ArXiv Algebraic Topology ArXiv Differential Geometry ArXiv Representation Theory ","date":"2021-10-23","objectID":"/resources/:1:1","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Popular APS Physics Today Quanta Magazine Physics Buzz ","date":"2021-10-23","objectID":"/resources/:1:2","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Other Blogs Joshua Black Sometimes Physics Sometimes Math John Baez Azimuth Sean Carroll Preposterous Universe Terry Tao What’s New Peter Woit Not Even Wrong ","date":"2021-10-23","objectID":"/resources/:1:3","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Reference Texts These pages contain links and explanations of some of my favorite books, chalks, pens, and various other items. The chosen texts and tools below are either essential to my work or essential to my happiness (a slight exxageration, but who doesn’t like the perfect piece of chalk?). ","date":"2021-10-23","objectID":"/resources/:2:0","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Physics My Favorite Physics Reference Texts ","date":"2021-10-23","objectID":"/resources/:2:1","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Maths My Favorite Maths Reference Texts ","date":"2021-10-23","objectID":"/resources/:2:2","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Tools of the Trade My Favorite Tools of the Trade ","date":"2021-10-23","objectID":"/resources/:2:3","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Programming I also routinely use and create developer resources, mostly related to Python and computational physics. I’ve collected the highlights below, including my favorite programming libraries and tutorials related to those libraries. Any of the code referenced below, I either use routinely myself or have contributed to personally. ","date":"2021-10-23","objectID":"/resources/:3:0","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"General Python Quick Start with Python Python Lib Tutorial Python Online Course ","date":"2021-10-23","objectID":"/resources/:3:1","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Computational \u0026 HPC BlueWaters Python Dask Numba Scipy ","date":"2021-10-23","objectID":"/resources/:3:2","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Physics in Python AstroPy GstLAL Documentation Manifold (GWave Geometry) ","date":"2021-10-23","objectID":"/resources/:3:3","tags":null,"title":"Resources","uri":"/resources/"},{"categories":null,"content":"Here I’ll list and describe my favorite supplies for math and science related tasks. I’m fairly particular when it comes to tools; my father -an engineer by trade- always liked to say that I should seek out the “right tool for the right job.” This statement seems more obvious for engineering disciplines, where the tools are often machines of various sizes; however, I have found it to be equally important in mathematics and theoretical physics! The pencil, paper, chalk, board, software, etc. can be a source of friction for me if chosen improperly, perhaps you feel the same. If so, the below selection of products that I use regularly might be useful to you! ","date":"2021-10-23","objectID":"/tools/:0:0","tags":null,"title":"Tools","uri":"/tools/"},{"categories":null,"content":"Pens \u0026 Pencils Likely the most frequently used tools for students, the pencil is important. It needs a good weight, decent grip, and the ability to deliver crisp lines. I find sharpening pencils tedious, so the only pencils I use are mechanical. I favor the rOtring due to its heavier weight, but also use the Kurutoga occasionally - its automatic lead-rotation mechanism keeps the equations sharp even when I have to write small. The last item here is a gateway-pen, the Parker Jotter. I call it a gateway pen because it was the first fountain pen I used, after which I never used another type of pen again. Fountain pens can get quite pricey, so this one is a good, cheap, entry-level option, perfect for every-day use. rOtring Rapid Pro Mechanical Pencil Uni Kurutoga Mechanical Pencil Parker Jotter Fountain Pen ","date":"2021-10-23","objectID":"/tools/:0:1","tags":null,"title":"Tools","uri":"/tools/"},{"categories":null,"content":"Paper Gotta have somewhere nice to take those pencils and pens for a drive! Good quality paper helps to preserve your notes while making the tactile nature of writing easier and more enjoyable. Paper is especially important if you are using a fountain pen, as they ink will have a tendency to seep into the paper (Moleskine is a bad paper for this). The Leuchtturm notebooks are perfect notetakers, coming with labels to help you organize and a table of contents that you can fill out while you go. Some might suggest that this product is similar to Moleskine - you’re not wrong, but you’re not right. Moleskine uses much cheaper paper, and doesn’t (at the time of this writing) have a dot-pattern paper, which is great for physics and math when we like to juxtapose words, diagrams, and equations. The Rhodia pad is ideal for homework since it is easy to tear out, but high enough quality to want to keep post-grading. The Ampad is a good cheap lab notebook or scratch pad. Leuchtturm 1917 Dotted Notebook Rhodia DotPad Ampad Computation Notebook ","date":"2021-10-23","objectID":"/tools/:0:2","tags":null,"title":"Tools","uri":"/tools/"},{"categories":null,"content":"Chalk Ah, chalk. My favorite tool. We could have an entire discussion about “why do you use chalk?” I’ll briefly say that chalk, while possessing all the tactile delight you could desire, also offers practical advantages over dry-erase markers. Specifically, chalk doesn’t need to dry when you erase, so it doesn’t slow you down. It never stains the board, isn’t harmful to smell, doesn’t dry out, is much cheaper than markers, on and on I could go… To those that complain about the dust, use microfiber cloths to erase - it will greatly reduce the amount of dust (conventional erasers just smear it around). Of all chalk makers, Hagoromo is my favorite (and I think this is a common opinion in the math world). The story behind the company and it’s relationship with the math community is long and interesting, you can read more about it in this excellent Gizmodo piece. Fortunately for us, this story ends with the chalk being available on Amazon! I use the white chalk for nearly all writing, occasionally using the red and blue colors for diagrams. Hagoromo Fulltouch White Chalk Hagoromo Red Chalk Hagoromo Blue Chalk When it comes to chalk erasers, there are three fundamental choices: felt, sponge, or cloth. I personally prefer the form factor of the felt eraser, though find that the microfiber cloths work the best at removing chalk. They are also easiest to maintain, since you can just throw them in the washer! Quartet Felt Eraser Smaller Felt Erasers Microfiber Cloths Sponges Some useful-but-optional chalk accessories. The chalk holders are nice if you like to keep your hands a little cleaner, or have a hard time gripping the smaller chalk pieces. The chalk case is useful when traveling. Hagoromo Chalk Holder Hagoromo Chalk Case ","date":"2021-10-23","objectID":"/tools/:0:3","tags":null,"title":"Tools","uri":"/tools/"},{"categories":null,"content":"Boards Give a nerd some chalk, he’s going to want a board. The BestRite boards have been around (and American made if that’s important to you) since the early 1930s, and have been the university standard since the mid 50’s. These are a little trickier to buy, since MooreCo stopped making them in mid-2020. There is another prominent manufacturer still making great boards, by the name of Marsh Industries. They also largely supply dealers, so you’ll have to find a sales rep. If you have the patience to go that route it is worth it! If you have a hard time finding a dealer, Marsh industries website has a sales email address here. If you want the simpler solution, the Quartet boards on Amazon are nice too. Make sure to stick with the porcelain board if possible, they make for better surfaces than the synthetics. Marsh Industries Chalkboard (scroll down for chalkboard surfaces) BestRite Chalkboard (Old link, not for sale anymore) Quartet Porcelain ChalkBoard ","date":"2021-10-23","objectID":"/tools/:0:4","tags":null,"title":"Tools","uri":"/tools/"},{"categories":null,"content":"Tech Tools This section is under the “if you want to treat yourself” condition, in that most of these suggestions are on the expensive side of the spectrum. However, I’ve gotten an immense amount of utility and mileage from the below items, and use them regularly. iPad Pro 12.9 The screen on the 12.9 size is roughly the size of an 8.5x11 piece of paper. Perfect for reading and annotating articles, taking notes Apple Pencil Super responsive, good weight and feel. Great for powering through lengthy equations. PaperLike iPad Screen Protector makes writing on glass more bearable, feels more tactile! Notability My personal favorite note-taking app (and I’ve tried them all). Hope you enjoy these tools as much as I do! If you have any additional suggestions feel free to leave a comment. ","date":"2021-10-23","objectID":"/tools/:0:5","tags":null,"title":"Tools","uri":"/tools/"},{"categories":["Code"],"content":"Motivation With the ebb of workload from first year graduate courses, I decided to rekindle the blog that I had setup a couple years prior. As a former professional Python developer, I had chosen Pelican as my static site generator (SSG) in late 2018. The set of plugins looked sufficient, and I could always write my own if needed. Fast-forward to this week, and the situation is different. The Hugo community has grown, broadened, and supported more use cases. In fact, some of the research groups I work with have switched to Hugo, and more intend to! It seemed opportune to migrate; here we are. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:1:0","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"My Use Case It’s only fair that I provide some detail on my uses of both Pelican and Hugo. As my content focuses on mathematical physics and related code, I often find the need to write $\\LaTeX$ equations, include figures, reference sources1, and create code blocks. Occasionally I also reference static files, such as PDF documents. I aspire to better integration with social media services, but this isn’t a primary concern. If your workflow is like mine, hopefully you will find some use herein. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:1:1","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"Why not Pelican? Pelican was a fine choice a few years ago, and is still not a bad choice today. I was surprised, however, to find that not many of the Pelican plugins, themes, or features had been updated since I originally created the blog! Cue the decaying-maintenance theme music. Further, the distant memory of difficulty from setting up the blog was amplified during the reboot process. Pelican had updated some internals, but my theme, of course, had not. Some plugins I relied on, for example Google Analytics, had dependencies that were no longer supported (oath2). The list goes on. I resorted to forking copies of the now-defunt themes and plugins and upgrading them myself; however, I didn’t have the time to polish the upgrades sufficiently for release. For all I’ve noted about stale Pelican code, I must point out that Justin Mayer has done a tremendous job of keeping Pelican going. He has collected a wayward littany of Pelican themes and plugins into a newer, submodule based monorepo, and he has personally helped me update/maintain some plugins over the years (e.g. render-math). If anyone can keep Pelican moving, he can. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:1:2","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"Why Hugo? Given the many choices (Jekyll, Next.js, Gatsby, etc.), why Hugo? The most touted advantage, the blazing-fast build speed, was interesting but honestly not that persuasive for my use case at first. I post a couple times a week, so build times aren’t that critical. After having worked with Hugo during the migration, I have come to deeply appreciate the ability to near-instantly rerender pages automatically after I change a file; my editing process is now substantially smoother. Beyond performance, the community is considerably more active than that of Pelican, with modern themes and plugins that remain supported. This weighed above all in my decision. As mentioned above, Pelican’s ease-of-use had degraded sharply in comparison. Hugo has a massive selection of updated themes as well as excellent documentation for creating new themes. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:1:3","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"Migration Let’s get down to business, how did I migrate? Fortunately, the Pelican paradigm is very similar to that of Hugo. Content is primarily contained in markdown files, one per post or page. The bulk of my migration, then, was a copy/paste! Its worth mentioning that for less trivial cases, Hugo has an impressive set of migration tools; however, Pelican is sadly absent. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:2:0","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"Things that were Easy The migration was simple, for the most part. Since both stacks use markdown files as a primary content format, the bulk of text remained unchanged. However, the header meta-data in the markdown files is slightly different, where a Pelican post would begin: Title: On The General Theory of Relativity Date: 1915-11-04 Category: Physics Tags: Gravity,Wheres-my-Nobel Author: Albert Einstein The same header in Hugo would be written slightly differently, in more conventional YAML syntax --- ```markdown title: On The General Theory of Relativity date: 1915-11-04 category: - Physics tags: - Gravity - Wheres-my-Nobel Author: Albert Einstein --- In addition to moving the text over, carrying integrations over was easier than expected. Getting Google-Analytics and Disqus to work on the site was as simple as putting the right identifiers in the config file. Yes, Pelican has similar features, but they didn’t ever work seamlessly out-of-the-box for me. Hugo did. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:2:1","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"Things that were Not Of the many glittering features that were an improvement in Hugo, a few took some adjustment. The first of these is the way in which equations are compiled. Hugo uses KaTeX instead of LaTeX for rendering equations, which like all tradeoffs for speed comes with a reduced feature set. In particular, KaTeX has no split environment, so I had to rewrite a bunch of my equations (I am not alone). For instance, was was $$\\begin{split} a \u0026= b \\\\ \u0026= d\\end{split}$$ Had to now be rewritten in suboptimal latex as $$\\begin{aligned} a \u0026= b \\\\\\\\ \u0026= d\\\\\\\\ \\end{aligned}$$ I fully anticipate to run into other nuances of KaTeX v. LaTeX; however, I must also note that KaTeX loads remarkably faster than MathJax. My site performance on mobile had suffered due to equation rendering before, but now it is blazing fast! Another item missing from the Hugo ecosystem is the ability to use BibTex to make citations in posts, analogous to the Pelican plugin pelican-cite. This means that I now must use manual footnote placements. Fortunately I use Zotero, so I can easily export formatted citations to the clipboard, which minimizes the time required. As an example, what was Cite a source. [@bibtexSourceKey] Has now become Cite a source. [^1] ... [^1]: Fully formatted citation text, 1905. This is admittedly a minor inconvenience, and perhaps a good starting point for a new Hugo plugin, now that GO supports them. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:2:2","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"My Workflow with Hugo Where did I land after all this migration? I have a stable, (subjectively) clean workflow for adding content with Hugo, managed entirely through GitHub actions and pages. For a full description of this workflow see Standup, Hugo! ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:3:0","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"GitHub Actions As mentioned, I use GitHub Actions to build and deploy this blog. Specifically I have a workflow configuration that relies on a protected main branch and Pull Requests, which is fairly standard. When I make a new post, I make a feature branch in this repo, push it, and make a Pull Request. The workflow builds the site to confirm I haven’t broken anything, but doesn’t deploy until after the Pull Request is merged. This was near-trivial to setup, thanks to the GitHub action marketplace, specifically the peaceiris/actions-hugo action, which sets up a Hugo-friendly build environment. I’ve included the full workflow YAML below: name: GitHub Pages on: push: branches: - main # Set a branch to deploy pull_request: jobs: build: runs-on: ubuntu-latest concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: '0.88.1' extended: true - name: Build run: hugo --minify --source=locallytrivial - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == 'refs/heads/main' }} with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./locallytrivial/public cname: locallytrivial.com ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:3:1","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"GitHub Pages I use GitHub Pages to host this blog, since it is free for public accounts and generally reliable. The Hugo Documentation has a nice guide for setting up GitHub Pages with Hugo, making this part of the process easy. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:3:2","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"Sample PR for this Post As an explicit example, here is the Pull Request for this blog post. If this isn’t an exercise in meta-programming it certainly borders on it. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:3:3","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"TL;DR Hugo is fast, clean, and modern. There is a slightly-higher learning curve than the Pelican+Jinja stack, but the tradeoff of dramatically improved maintainer and community activity has been worth it for me. I ultimately intend to write Hugo extensions, and will have more to say then about extensibility. Until then, if read my explainer if you want to standup a blog like this, or leave a comment below. ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:4:0","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"References Sample footnote reference ↩︎ ","date":"2021-10-23","objectID":"/posts/migration-to-hugo/:5:0","tags":["Hugo","Blog Stack"],"title":"Migration to Hugo","uri":"/posts/migration-to-hugo/"},{"categories":["Code"],"content":"Preliminaries Let’s quickly review what you’ll need to build a Hugo blog, and what it will mean to have a Hugo blog at the end of the process. ","date":"2021-10-23","objectID":"/posts/standup-hugo/:1:0","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"What You’ll Need Before we begin, you’ll need a few things. I’ll list the essentials below (as well as my recommendations where relevant) Git, the ubiquitous VCS of the era GitHub account, for storing your blog content (and hosting for free!) Text Editor, for writing content and editing configuration files (I recommend either Sublime Text for simple uses or GoLand for those who also need to edit GO code for plugins) ","date":"2021-10-23","objectID":"/posts/standup-hugo/:1:1","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"What You’ll Have By the end of this post, the hope is that you will have: A fully-functional, clean, and simple blog Hosted for free on GitHub Pages A workflow for adding new content and automatically building your website Let’s (hu)go! ","date":"2021-10-23","objectID":"/posts/standup-hugo/:1:2","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Getting Started with Hugo The good news: Hugo has excellent getting started documentation. My goal is to guide you through the process quickly, filling in any gaps. ","date":"2021-10-23","objectID":"/posts/standup-hugo/:2:0","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Installing Hugo A convenient detail about using Hugo is that is comes as a single binary, there is no complex environment to maintain! Nonetheless, we must install Hugo. On Macos, this is done by brew install hugo See the installation docs for other operating systems. ","date":"2021-10-23","objectID":"/posts/standup-hugo/:2:1","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Creating the Repository The blog needs a place to live - create a GitHub Repo to store the code. Note: if you intend to host with GitHub Pages as is done here, the name of your repository must be \u003cusername\u003e.github.io for users or \u003corganization\u003e.github.io for organizations. Clone your repo! We use ssh below, see GitHub SSH Key Guide for more detail if you need to setup SSH keys first. git clone git@github.com:\u003cusername\u003e/\u003cusername\u003e.github.io.git Once the repo is cloned locally, change directory to it cd /path/to/my/repo Now run the Hugo command for creating a new site, with a specific name \u003csitename\u003e for the output folder to be created in the repo hugo new site \u003csitename\u003e This is a good place to commit and push all changes! ","date":"2021-10-23","objectID":"/posts/standup-hugo/:2:2","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Preliminary Content We need to add a post before rendering the site! We’ll create a post called my-first-post using the Hugo command new. First make sure you’re in the site directory cd /path/to/my/repo/\u003csitename\u003e Now create the post markdown file hugo new posts/my-first-post.md Or, equivalently, create a markdown file at /path/to/my/repo/\u003csitename\u003e/content/posts/my-first-post.md that looks like: --- title: \"Hello, World!\" date: 2021-10-23 draft: false --- Sample post content ","date":"2021-10-23","objectID":"/posts/standup-hugo/:2:3","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Theme Before we can build the site, we’ll need to choose a theme. This choice is important since not all themes have the same set of configuration options. Choose your theme from the vast selection and then add it as a git submodule. For this demo we’ll use the Coder Theme, on which this site’s theme is based. cd /path/to/my/repo/\u003csitename\u003e git submodule add https://github.com/luizdepra/hugo-coder.git themes/coder Now we need to specify the theme in the Hugo config file, which is usually located /path/to/my/repo/\u003csitename\u003e/config.toml. Use your text editor of choice to add the following: theme = \"coder\" Where you can replace \"coder\" with the name of the theme you chose, if you chose differently. Now the theme should be ready for build! Note that you will need to commit the submodule just like other changes to the repo. ","date":"2021-10-23","objectID":"/posts/standup-hugo/:2:4","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Building Let’s build the site and serve it: hugo server -D The output will tell you where it is being served, likely localhost:1313. Now you’ve built the basics! ","date":"2021-10-23","objectID":"/posts/standup-hugo/:2:5","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Adding a Non-post Page The documentation is a little thin on this, but many of us would like to have an “About” page or some other page that has non-post content. The process for creating these is very easy! Let’s use the “About” page as an example. Create a file for it at location /path/to/my/repo/\u003csitename\u003e/content/about.md with header and content: --- title: \"About\" date: 2021-10-23 draft: false --- I am a Hugo-powered blogger! Once you save the file, you should notice that Hugo has detected a change, and automatically rebuilt the site! We should add the page to the menu to make it easy to find, which is done in the config file. Note: menu items should be standard across themes; however, check with the documentation of your specific theme if you encounter any rendering oddities. In the config file we’ll add (or modify if exists): [menu] [[menu.main]] identifier = \"about\" name = \"About\" url = \"/about/\" If you want to add other pages to the menu, this is accomplished by adding another [[menu.main]] item. Once Hugo detects this change and reruns, you should be able to see the “About” menu item and the corresponding page by clicking it. ","date":"2021-10-23","objectID":"/posts/standup-hugo/:2:6","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Workflow and Deployment Now you have a functioning Hugo project, let’s setup some bells and whistles to get this content online. We will first setup GitHub actions that will build and deploy the site for you, then we will configure GitHub pages. See the Hugo docs for more details. ","date":"2021-10-23","objectID":"/posts/standup-hugo/:3:0","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"GitHub Action GitHub Actions offer a wide array of automation and workflow benefits. Today, we’ll setup a workflow that checks for new commits on main and from pull requests, sets up a Hugo environment, and builds your site. The configuration below is also set such that only after you merge the pull request will the site be deployed. A full example is included at the end of this post. Next we need to create a YAML file for this workflow at the following location /path/to/my/repo/.github/workflows/gh-pages.yml, and configure it to match the below: name: GitHub Pages on: push: branches: - main # Set a branch to deploy pull_request: jobs: build: runs-on: ubuntu-latest concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: '0.88.1' extended: true - name: Build run: hugo --minify --source=locallytrivial - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == 'refs/heads/main' }} with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./locallytrivial/public cname: locallytrivial.com The above workflow uses the actions/checkout action to clone your repo content, the peaceiris/actions-hugo action to setup the necessary Hugo dependencies, and the peaceiris/actions-gh-pages action to deploy the site (only on the main branch, which is where commits go after Pull Request is merged). ","date":"2021-10-23","objectID":"/posts/standup-hugo/:3:1","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"GitHub Pages To setup GitHub pages, you’ll go to the GitHub Pages section of your repo settings https://github.com/\u003cusername\u003e/\u003cusername\u003e.github.io/settings/pages, and make sure the “Source” branch is set to gh-pages. This will only be available after you have pushed to master (or merged your first pulln request). You can optionally set a custom domain name here as well! (That step might require editing DNS configurations from your domain host, e.g. domains.google.com) ","date":"2021-10-23","objectID":"/posts/standup-hugo/:3:2","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Example Usage: Making a Post Now you should be all-ready to make a post and deploy the site. This example gives each workflow step to make a sample post titled, “Standup, Hugo!”. ","date":"2021-10-23","objectID":"/posts/standup-hugo/:4:0","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Create a Feature Branch The first step in a Pull Request workflow is to create a feature branch. See GitHub docs for more on git flow. Make sure you’re on latest main branch git checkout main git pull Now create a branch, with a somewhat descriptive name git checkout -b post-standup-hugo ","date":"2021-10-23","objectID":"/posts/standup-hugo/:4:1","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Create the Post Create a new Markdown document for the post /path/to/my/repo/\u003csitename\u003e/content/posts/standup-hugo.md with content: --- title: \"Standup, Hugo!\" date: 2021-10-23 draft: false categories: - Code tags: - Hugo - Blog Stack --- This is a post I created using the GitHub workflow! ","date":"2021-10-23","objectID":"/posts/standup-hugo/:4:2","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Commit, Push, Create Pull Request Commit and push these changes git add /path/to/my/repo/\u003csitename\u003e/content/posts/standup-hugo.md git commit . -m \"commiting new post\" git push Now navigate to the GitHub page for your repo and find the branches page: https://github.com/\u003cusername\u003e/\u003cusername\u003e.github.io/branches. Find the post-standup-hugp branch and click “New Pull Request”. Enter a somewhat descriptive title and description, then click “Create Pull Request”. ","date":"2021-10-23","objectID":"/posts/standup-hugo/:4:3","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Code"],"content":"Merge and Deploy (with a button!) Wait for the build suite to pass, then click “Merge Pull Request”. Once it is merged, the build suite on the main branch will deploy your code to the gh-pages branch! If you do not see your website at https://\u003cusername\u003e.github.io make sure to double check that the Source branch is set to gh-pages in the repository settings \u003e Pages. Sit back, and enjoy. You’ve stood up a Hugo blog! ","date":"2021-10-23","objectID":"/posts/standup-hugo/:4:4","tags":["Hugo","Blog Stack"],"title":"Standup, Hugo! Creating a Blog with Hugo","uri":"/posts/standup-hugo/"},{"categories":["Physics"],"content":"Often in discussions about blackholes, the question arises of observer experience when falling into a blackhole. Due to the extreme tidal forces experienced along such a path, the observer would be stretched out - a process colloquially referred to as spaghettification. This week I would like to look at a happier use for spaghetti near blackholes. If an observer in a stable circular orbit around the supermassive blackhole at the center of our galaxy were to use spaghetti as a tether, how much spaghetti would be required? Restated, the question of interest this week is: How much spaghetti would be required to form the smallest stable circle around the supermassive blackhole at the center of the Milky Way? The term for such an orbit (of a massive test particle) is commonly called the innermost stable circular orbit, or ISCO for short. For today’s post, we’ll pretend the “S” stands for spaghetti. ","date":"2021-10-08","objectID":"/posts/fermi-friday-20211008/:0:0","tags":["Fermi Problem"],"title":"Fermi Problem: Galactic Spaghetti","uri":"/posts/fermi-friday-20211008/"},{"categories":["Physics"],"content":"ISCO Radius To keep things simple, we take the case of a non-spinning blackhole, which is described by the Schwarzschild solution to the Einstein equations. The radius of the spaghetti orbit in this case would be $3$ times the blackhole radius $R_S$, which is also called the Schwarzschild radius. 1 $$R_{\\mathrm{ISCO}} = 6 \\frac{G M}{c^2} = 3 R_{S}$$ In the above, $G$ represents Newton’s gravitational constant, $c$ represents the speed of light, and $M$ represents the mass of the blackhole around which our spaghetti tether has been formed. ","date":"2021-10-08","objectID":"/posts/fermi-friday-20211008/:0:1","tags":["Fermi Problem"],"title":"Fermi Problem: Galactic Spaghetti","uri":"/posts/fermi-friday-20211008/"},{"categories":["Physics"],"content":"Spaghetti Distance Next, we’ll need a relationship between the length of spaghetti $\\ell$ and the mass of that spaghetti $m$. If we assume a fixed cross-sectional area $\\sigma$ then we can use the familiar relationship between the density $\\rho$ and volume $V$ of matter: $$m = \\rho V = \\rho \\sigma \\ell \\implies \\ell = \\frac{m}{\\rho \\sigma}$$ We can estimate the cross-sectional area of the spaghetti strands $\\sigma$ by using the radius of a spaghetti stick $r_s$ as $\\sigma = \\pi r_s^2$. Similarly, we can estimate the density of spaghetti in terms of a familiar spaghetti box! $$\\rho = \\frac{m_{\\mathrm{box}}}{V_{\\mathrm{box}}} = \\frac{m_{\\mathrm{box}}}{\\ell_{\\mathrm{box}} h_{\\mathrm{box}} w_{\\mathrm{box}}}$$ Where $\\ell_{\\mathrm{box}}, h_{\\mathrm{box}}, w_{\\mathrm{box}}$ are the length, height, and width of a spaghetti box, respectively. ","date":"2021-10-08","objectID":"/posts/fermi-friday-20211008/:0:2","tags":["Fermi Problem"],"title":"Fermi Problem: Galactic Spaghetti","uri":"/posts/fermi-friday-20211008/"},{"categories":["Physics"],"content":"Solution Putting the above expressions together, we arrive at the innermost spaghetti circular orbit mass: $$\\begin{aligned}m \u0026= \\ell \\rho \\sigma = \\left(2 \\pi \\frac{6 GM}{c^2}\\right) \\left( \\frac{m_{\\mathrm{box}}}{\\ell_{\\mathrm{box}} h_{\\mathrm{box}} w_{\\mathrm{box}}} \\right) \\left(\\pi r_s^2\\right)\\\\\\\\ \u0026= \\frac{12 \\pi^2 r_s^2 G M m_{\\mathrm{box}}}{c^2 \\ell_{\\mathrm{box}} h_{\\mathrm{box}} w_{\\mathrm{box}}}\\\\ \\end{aligned}$$ Plugging in some numbers: Mass of a (galactic center) blackhole: $M \\approx 4e6 M_{\\odot} = 8 \\times 10^{36}$ kg Radius of spaghetti strand: $r_s \\approx 2 \\times 10^{-3}$ m Newton’s Gravitational constant $G \\approx 7 \\times 10^{-11} \\mathrm{\\ m^{3} kg^{-1} s^{-2}}$ Mass of spaghetti box: $m_{\\mathrm{box}} \\approx 5 \\times 10^{-1}$ kg Dimensions of spaghetti box: $(\\ell_{\\mathrm{box}}, h_{\\mathrm{box}}, w_{\\mathrm{box}}) \\approx (25, 3, 7) \\times 10^{-2}$ m Speed of light: $c \\approx 3 \\times 10^8\\ \\mathrm{ms^{-1}}$ The estimate is hidden below. Press the button below to see solution! Show Estimate What a large amount of pasta! To put this number in context, This amount of spaghetti could feed every human on Earth approximately $3$ times. C. W. Misner, K. S. Thorne, J. A. Wheeler, and D. Kaiser, Gravitation (Princeton University Press, Princeton, N.J, 2017). ↩︎ ","date":"2021-10-08","objectID":"/posts/fermi-friday-20211008/:0:3","tags":["Fermi Problem"],"title":"Fermi Problem: Galactic Spaghetti","uri":"/posts/fermi-friday-20211008/"},{"categories":["Physics"],"content":"The question of interest this week is: If all baseballs ever used in an MLB game were compressed into a blackhole, how large would the blackhole be? To estimate the blackhole radius $r_{BH}$, we’ll need to compute the number of baseballs used in MLB games, translate that number to a total mass, then compute the blackhole radius of the corresponding mass. ","date":"2021-09-24","objectID":"/posts/fermi-friday-20210924/:0:0","tags":["Fermi Problem"],"title":"Fermi Problem: Baseball Blackhole","uri":"/posts/fermi-friday-20210924/"},{"categories":["Physics"],"content":"Counting Baseballs We begin with a lower-bound on the number of baseballs used in all MLB games. If we define $n_u$ as the number of pitches that a ball is used for, then the problem translates to counting pitches. The pitches per game can be computed in terms of the number of pitches per inning $n_p$ and the number of innings per game $n_i$ as $n_p n_i$. The number of regular season games per year can be given in terms of the number of games per team $n_{g}$, the number of teams $n_{t}$, and the number of postseason games $n_{ps}$ as $n_g n_t / 2 + n_{ps}$. Scaling by the number of seasons $n_s$, then the complete expression for total baseballs is then given by: $$n_B = \\frac{n_s n_p n_i \\left(n_g n_t + 2 n_{ps} \\right)}{2 n_u}$$ ","date":"2021-09-24","objectID":"/posts/fermi-friday-20210924/:0:1","tags":["Fermi Problem"],"title":"Fermi Problem: Baseball Blackhole","uri":"/posts/fermi-friday-20210924/"},{"categories":["Physics"],"content":"Blackhole Radius To estimate the blackhole radius $r_{BH}$ of an arbitrary mass $m$, we use the well-known, elegant equation for the Schwarzschild event-horizon radius: $$r_{s} = \\frac{2 G m}{c^2}$$ ","date":"2021-09-24","objectID":"/posts/fermi-friday-20210924/:0:2","tags":["Fermi Problem"],"title":"Fermi Problem: Baseball Blackhole","uri":"/posts/fermi-friday-20210924/"},{"categories":["Physics"],"content":"Solution Putting the above expressions together, we arrive at the baseball black hole radius: $$r_{b} = \\frac{G m_B n_s n_p n_i \\left(n_g n_t + 2 n_{ps} \\right)}{n_u c^2}$$ Plugging in some numbers: Mass of a baseball: $m_B = 1.5 \\times 10^{-1}$ kg Number of pitches per baseball: $n_u = 2 \\times 10^0$ Number of seasons: $n_s = 1.0 \\times 10^2$ Number of pitches per inning: $n_p = 2 \\times 10^1$ Number of innings per game: $n_i = 1 \\times 10^1$ Number of games per team: $n_g = 1.6 \\times 10^2$ Number of teams: $n_t = 3 \\times 10^1$ Number of post-season games: $n_{ps} = 5 \\times 10^1$ Gravitational constant: $G = 6.7 \\times 10^{-11}\\ \\text{m}^3 \\text{kg}^{-1}\\text{s}^{-2}$ Speed of Light: $c = 3 \\times 10^8\\ \\text{ms}^{-1}$ Show Estimate The radius is so small, that I had to compute a few other numbers to contextualize it. The following numbers are the amount of time required, at the current rate of game play, for the baseball black hole to reach a certain size. Proton Radius ($10^{-15}$ m) would require 18 million more years of baseball Baseball Radius ($10^{-2}$ m) would require $1.3 \\times 10^{21}$ more years of baseball. Considerably longer than the age of the universe ($1.4 \\times 10^{10}$ yr) ","date":"2021-09-24","objectID":"/posts/fermi-friday-20210924/:0:3","tags":["Fermi Problem"],"title":"Fermi Problem: Baseball Blackhole","uri":"/posts/fermi-friday-20210924/"},{"categories":["Physics","Math"],"content":"As this is the inaugural issue of the found-this-week series, I’ll briefly note my motivation and inspiration. The title of this series is an overt nod to the famous series This Week’s Finds written by the inimitable John Baez. I have learned a great deal from that series and his book on gravity, and have the utmost admiration for Baez’ abilities as a physicist and communicator. It is my hope that this series will be found useful by some, insightful by at least a few, and accessible by many. All feedback is welcome, and thank you in advance for bearing with me as I develop these posts. ","date":"2021-09-19","objectID":"/posts/ftw-20210919/:0:0","tags":["Found This Week"],"title":"Found This Week #1","uri":"/posts/ftw-20210919/"},{"categories":["Physics","Math"],"content":"Algebraic and Geometric Equivalence of Tangent Vectors As will likely come up in future posts, I’m thoroughly enjoying Modern Differential Geometry for Physicists by Chris Isham. He develops formalism and intuition without sacrificing rigor, all while carrying a conversational tone. See my reference review for more. 1 Most students of physics or calculus are generally familiar with the notion of a tangent vector. This concept becomes more nuanced, of course, when the ambient space is generalized from $\\mathbb{R}^n$ to a manifold $\\mathcal{M}$ of dimension $n$. Isham takes an unusual approach to formalizing the tangent vector concept by introducing two seemingly-different definitions (either of which are common among the relativity literature) and then formally proving their equivalence (done nowhere in the literature). I appreciated the demonstration of equivalence, and will sketch it below. ","date":"2021-09-19","objectID":"/posts/ftw-20210919/:1:0","tags":["Found This Week"],"title":"Found This Week #1","uri":"/posts/ftw-20210919/"},{"categories":["Physics","Math"],"content":"Tangent Vectors Geometrically Isham first introduces tangent vectors in the familiar, geometric manner. If we let $\\gamma_1(\\lambda)$ and $\\gamma_2( \\lambda)$ be curves passing through a point $p$ on a patch of the manifold $\\mathcal{M}$ such that $\\gamma_1(\\lambda=0) = \\gamma_2(\\lambda=0) = p$, then it is natural to define the tangent vector $v_p$ at $p$ as an equivalence class of curves, denoted $\\left[\\gamma\\right]$, where the equivalence criteria is defined by sharing the tangent vector $v_p$: $$\\left. \\frac{d x^{\\mu}}{d \\lambda} (\\gamma_1(\\lambda)) \\right|_{\\lambda=0} = v_p = \\left. \\frac{d x^{\\mu}}{d \\lambda} (\\gamma_2(\\lambda)) \\right|_{\\lambda=0}$$ The tangent space $T_p \\mathcal{M}$ can then be defined as the set of all tangent vectors at the point $p$, or the set of all equivalence classes of curves at the point $p$. ","date":"2021-09-19","objectID":"/posts/ftw-20210919/:1:1","tags":["Found This Week"],"title":"Found This Week #1","uri":"/posts/ftw-20210919/"},{"categories":["Physics","Math"],"content":"Tangent Vectors Algebraically The algebraic approach begins with the concept of a derivation, or directional derivative, $v$ as a map that is both linear and obeys the Leibniz rule. By thinking of the smooth functions on the manifold $C^{\\infty}(\\mathcal{M})$ as a ring over $\\mathbb{R}$, we can define the map $v: C^{\\infty}(\\mathcal{M}) \\to \\mathbb{R}$ as: $$v(f) \\equiv \\left. \\frac{df\\left( \\gamma(\\lambda) \\right)}{d\\lambda} \\right|_{\\lambda=0} \\quad\\text{ where }\\quad \\left[\\gamma\\right] = v$$ By linear, we mean that for any $f, g \\in C^{\\infty}(\\mathcal{M})$ and $r, s \\in \\mathbb{R}$, we have $v(rf + sg) = rv( f) + sv(g)$, and by Leibniz rule we mean $v(fg) = f(p)v(g) + g(p)v(f)$. The set of all derivations at a point $p$ is denoted $D_p \\mathcal{M}$. ","date":"2021-09-19","objectID":"/posts/ftw-20210919/:1:2","tags":["Found This Week"],"title":"Found This Week #1","uri":"/posts/ftw-20210919/"},{"categories":["Physics","Math"],"content":"Equivalence of Definitions Isham shows that these two definitions of the tangent space, $T_p \\mathcal{M}$ and $D_p \\mathcal{M}$, are equivalent by proving that the natural map between them $\\iota$ is, in fact, an isomorphism, where $\\iota: T_p\\mathcal{M} \\to D_p\\mathcal{M}$ is defined as: $$\\iota(v)(f) \\equiv \\left. \\frac{df \\left(\\gamma\\left(\\lambda\\right)\\right) }{d\\lambda} \\right|_{\\lambda=0}$$ To show that $\\iota$ is an isomorphism, Isham demonstrates that it is both injective (one-to-one) and surjective (onto). To show injectivity, assume that $\\iota(\\left[\\gamma_1\\right]) = \\iota(\\left[\\gamma_2\\right])$, then we must have $$\\left. \\frac{df \\left(\\gamma_1\\left(\\lambda\\right)\\right) }{d\\lambda} \\right|_{\\lambda=0}$$ The above shows that both $\\gamma_1$ and $\\gamma_2$ are tangent at $p$, which implies that they are, in fact, equivalent. Therefore $\\left[\\gamma_1\\right] = \\left[\\gamma_2\\right]$, and $\\iota$ is injective. To show that $\\iota$ is surjective we choose an element $v$ of the range $D_p\\mathcal{M}$ and define a curve $\\gamma_v$ such that $\\gamma_v(0)=p$ and $v(x^{\\mu})=\\frac{d}{d\\lambda}x^{\\mu}\\circ\\gamma(\\lambda)|_{\\lambda=0}$. Recall that we can expand a tangent vector as $v_p$ in terms of derivatives of a coordinate system $x^{\\mu}$ as $v = v^{\\mu}\\partial_{\\mu}$ and therefore $v(f) = v^{\\mu} \\partial_{\\mu} f = \\frac{d}{d\\lambda} x^{\\mu} \\circ \\gamma_v |_{\\lambda=0} \\partial_{\\mu} f$. But Isham shows: $$\\begin{align} \\left. \\frac{d}{d\\lambda} f\\circ \\gamma_v \\right|_{\\lambda=0} \u0026= \\left. \\frac{d}{d\\lambda}(f \\circ \\phi^{-1} \\circ \\phi \\circ \\gamma_v) \\right|_{\\lambda=0} \\\\\\\\ \u0026= \\sum_{\\mu} \\left. \\frac{\\partial}{\\partial u^{\\mu}} (f\\circ \\phi^{-1}) \\right|_{\\phi(p)} \\left. \\frac{d}{d\\lambda} u^{\\mu} (\\phi \\circ \\gamma_v) \\right|_{\\lambda=0} \\\\\\\\ \u0026= \\sum_{\\mu} \\left(\\frac{\\partial}{\\partial x^{\\mu}}\\right)_{p} f \\left. \\frac{d}{d\\lambda} x^{\\mu} \\circ \\gamma_v(\\lambda) \\right|_{\\lambda=0} = v(f) \\end{align}$$ Since $\\frac{d}{d\\lambda} f \\circ \\gamma_v |_{\\lambda=0} = v(f)$, then $\\left[\\gamma_v\\right](f) = v(f)$ and therefore $\\iota$ is surjective. This completes the proof, and we can robustly conclude that the geometric and algebraic pictures are formally equivalent! We are then free to use either where convenient. ","date":"2021-09-19","objectID":"/posts/ftw-20210919/:1:3","tags":["Found This Week"],"title":"Found This Week #1","uri":"/posts/ftw-20210919/"},{"categories":["Physics","Math"],"content":"Swarms of Searching Particles During a recent talk the subject of optimization arose in the context of gravitational wave detection. 2 Though interested in the application (my present research overlaps heavily with GW detection), the general concept of particle swarm optimization (PSO) captured my attention. This optimization method involves an initial distribution of $m$ particles $\\{x^{\\mu}_{k}\\}$ in the $n$-dimensional parameter space $\\mathcal{M}$ of some measure of quality $f: \\mathcal{M} \\to \\mathbb{R}$, where $\\mu = 1, \\dots, n$ refers to the coordinate in $\\mathcal{M}$ and $k = 1, \\dots, m$ refers to the particle number. Each particle is initialized with some velocity, and the velocity is updated throughout each iteration of the algorithm. Interestingly, the particles are not computing local gradients, rather, their velocities are updated using a randomized combination of local (nearest-neighbors-in-swarm) and global (all-swarm) information. The iteration rule can be summarized broadly by the equation below. $$\\begin{align} v^{\\mu}_{k}(t) \u0026= c_0 v^{\\mu}_{k}(t - \\Delta t) \\\\\\\\ \u0026+ c_1 r_1 \\left[\\eta^{\\mu}_k(t - \\Delta t) - x^{\\mu}_k(t - \\Delta t)\\right] \\\\\\\\ \u0026+ c_2 r_2 \\left[\\zeta^{\\mu}(t - \\Delta t) - x^{\\mu}_k(t - \\Delta t)\\right] \\end{align}$$ Where the variable $\\eta^{\\mu}_k$ represents the best known position of the local neighbors of particle $k$ and the variable $\\zeta^{\\mu}$ represents the best known position of the entire swarm (also called the global best). The term best here refers to the type of optimization, in our example we would maximizing our quality function $f$, so for example $\\zeta^{\\mu}$ is the position in the swarm that corresponds to the larges value of $f$. When the velocity updates, the algorithm is essentially trying to mix three things: The previous direction of the particle The direction towards the known, local optimum The direction toweards the known, global optimum Particle Swarm Optimization Example For further reading, the PSO algorithm has been studied extensively in general.3 PSO has also been used in a variety of scientific fields, such as gravitational wave analysis,4 and has even been used in industry settings, such as financial portfolio optimization.5 C. J. Isham, Modern Differential Geometry for Physicists, 2nd ed (World Scientific, Singapore ; River Edge, N.J, 1999). ↩︎ S. Adhicary, Advance Alerts from Gravitational Wave Searches of Binary Compact Objects for Electromagnetic Follow-Ups, (unpublished). ↩︎ R. Chen, W. K. Huang, and S. Yeh, Particle Swarm Optimization Approach to Portfolio Construction, Intell Sys Acc Fin Mgmt isaf.1498 (2021). ↩︎ Y. Wang and S. D. Mohanty, Particle Swarm Optimization and Gravitational Wave Data Analysis: Performance on a Binary Inspiral Testbed, Phys. Rev. D 81, 063002 (2010). ↩︎ M. Clerc, Particle Swarm Optimization (ISTE, London ; Newport Beach, 2006). ↩︎ ","date":"2021-09-19","objectID":"/posts/ftw-20210919/:2:0","tags":["Found This Week"],"title":"Found This Week #1","uri":"/posts/ftw-20210919/"},{"categories":["Physics"],"content":"For this week’s installment of Fermi estimation, the question of interest is: How fast would the sun burn an amount of hydrogen equivalent to the above-ground mass of Manhattan? To estimate the burn-time we’ll need to guess at a few quantities: the above-ground mass of Manhattan, the solar luminosity (total energy emitted from the sun), and fraction of energy emitted from the core of the sun that makes it to the surface. ","date":"2021-09-17","objectID":"/posts/fermi-friday-20210917/:0:0","tags":["Fermi Problem"],"title":"Fermi Problem: A Different Manhattan Project","uri":"/posts/fermi-friday-20210917/"},{"categories":["Physics"],"content":"Mass of Manhattan We will estimate the above-ground mass $m$ of Manhattan by computing a rough volume $V$ and density $\\rho$, then using the familiar relation $m=\\rho V$. To compute the volume we make some assumptions. First, we represent the average number of stories of a building in Manhattan as $n_{s}$, the height of a story as $h_{s}$, and the number of buildings in Manhattan as $n_{b}$. For simplicity, we assume each building to have a square base of length $b_{s}$, then the total volume of buildings in Manhattan $V_{\\text{M}}$ is: $$V_{\\text{M}} = n_{b} n_{s} h_{s} b_{s}^2$$ Computing the density will be a little easier. If we assume that each building is roughly a shell of concrete, then concrete will compose a fraction $f_{c}$ of the building. Given the density of concrete $\\rho_{c}$, the density of Manhattan $$ will be $\\rho_{\\text{M}} = f_c \\rho_{c}$. Plugging this in to get the above-ground mass of Manhattan: $$m_{\\text{M}} = V_{\\text{M}} \\rho_{\\text{M}} = n_{b} n_{s} h_{s} b_{s}^2 f_c \\rho_{c}$$ ","date":"2021-09-17","objectID":"/posts/fermi-friday-20210917/:0:1","tags":["Fermi Problem"],"title":"Fermi Problem: A Different Manhattan Project","uri":"/posts/fermi-friday-20210917/"},{"categories":["Physics"],"content":"Solar Luminosity Using the temperature $T_{\\odot}$ and radius $R_{\\odot}$ of the sun, and approximating the Sun as a blackbordy, we can use the Stefan-Boltzman law. This law relates the temperature $T$ and surface area $A$ of a blackbody to the total energy output $\\mathcal{L}$ of the object: $\\mathcal{L} = \\sigma A T^4$. For simplicity, we assume the sun to be a perfect sphere, then: $$\\mathcal{L}_{\\odot} = 4 \\pi \\sigma R_{\\odot}^2 T_{\\odot}^4$$ ","date":"2021-09-17","objectID":"/posts/fermi-friday-20210917/:0:2","tags":["Fermi Problem"],"title":"Fermi Problem: A Different Manhattan Project","uri":"/posts/fermi-friday-20210917/"},{"categories":["Physics"],"content":"Burn Rate THe solar luminosity tells us how much energy per unit time is emitted from the sun. If we want to know how much mass is consumed to produce that energy, we need to understand how much energy is produced in the fusion of Hydrogen. Using a simple approximation, 4 Hydrogen atoms are converted into 1 Helium atom. The difference in total mass is due to the energy released by the process, which we can estimate using Einstein’s famous relation: $E=mc^2$. Therefore, the reaction energy $E_{r}$ is a function of the change in reactant mass $\\Delta m_r = 4 m_{\\text{H}} - m_{\\text{He}}$, which gives us an expression for the unit energy $E_{\\text{H}}$. $$E_{\\text{H}} = \\frac{E_r}{m_{\\text{H}}} = \\left(4 - \\frac{m_{\\text{He}}}{m_{\\text{H}}} \\right) c^2$$ We can now compute the burn rate by unit analysis. If the luminosity gives (energy / time) and the unit reaction energy gives (energy / mass), then in order to get the burn rate in terms of (mass / time) we need to divide the luminosity by the unit reaction rate: $$r_{\\text{burn}} = \\frac{\\mathcal{L}}{E_{\\text{H}}}$$ ","date":"2021-09-17","objectID":"/posts/fermi-friday-20210917/:0:3","tags":["Fermi Problem"],"title":"Fermi Problem: A Different Manhattan Project","uri":"/posts/fermi-friday-20210917/"},{"categories":["Physics"],"content":"Solution Putting the above expressions together, we arrive at the burn-time: $$\\tau_{\\text{burn}} = \\frac{m_{\\text{M}}}{r_{\\text{burn}}} = \\frac{m_{\\text{M}} E_{\\text{H}} }{\\mathcal{L} } = \\frac{ n_{b} n_{s} h_{s} b_{s}^2 f_c \\rho_{c} \\left(4 - \\frac{m_{\\text{He}}}{m_{\\text{H}}} \\right) c^2 }{ 4 \\pi \\sigma R_{\\odot}^2 T_{\\odot}^4 }$$ Plugging in some numbers: Number of buildings in Manhattan: $n_b = 5 \\times 10^4$ Average number of stories: $n_s = 2 \\times 10^1$ Height of a story: $h_s = 5 \\times 10^0$ (m) Width of a story: $b_s = 5 \\times 10^1$ (m) Fraction of a building that is concrete: $f_c = 1 \\times 10^{-3}$ Density of concrete: $\\rho_c = 3 \\times 10^3$ (kg / m^3) Mass of Helium: $m_{\\text{He}} = 6.6 \\times 10^{-27}$ (kg) Mass of Hydrogen: $m_{\\text{H}} = 1.7 \\times 10^{-27}$ (kg) Speed of Light: $c = 3 \\times 10^8$ (m / s) Temperature of sun: $T_{\\odot} = 6 \\times 10^3$ K (Kelvin) Radius of sun: $R_{\\odot} = 7 \\times 10^8$ m (meters) Stefan-Boltzmann constant: $\\sigma = 6 \\times 10^-8 \\quad \\text{W} \\cdot \\text{m}^{-2} \\cdot \\text{K}^{-4}$ Show Estimate ","date":"2021-09-17","objectID":"/posts/fermi-friday-20210917/:0:4","tags":["Fermi Problem"],"title":"Fermi Problem: A Different Manhattan Project","uri":"/posts/fermi-friday-20210917/"},{"categories":["Misc"],"content":"After completing the first year of graduate school (post on the industry $\\to$ grad school transition forthcoming), I’ve finally got time to reboot the blog, with more focus. I’ll be posting on a $\\sim$weekly basis about the interesting topics I come across in the course of research, class, and general academic meandering. Renewed areas of focus will include various mathematical, physical, or programming topics, such as: Unravelling bundles (as in fibre bundles) Wormhole solutions in GR and energy conditions Managing environments in Python and developer workflows Fermi Figures - playful posts about solving various back-of-the-envelope questions Enthralling Theorem - spotlight of an interesting theorem / mathematical fact Found this week - weekly interesting discoveries, clearly and heavily inspired by the famous “This week’s finds” - an asymptote I only hope to approach over time. Also, the recommended physics and maths references pages have been thoroughly updated (they were quite stale). ","date":"2021-09-12","objectID":"/posts/reboot/:0:0","tags":["General"],"title":"Blog Reboot","uri":"/posts/reboot/"},{"categories":["Math"],"content":"I first encountered a diagram of algebraic structures at the end of Jeevanjee’s second chapter, “Vector Spaces”, which elegantly summarizes the high-level differences in structure between sets, vector spaces, and inner product spaces. 1 This diagram was immensely helpful to me, in that it helped show the relationships between various commonly used objects in mathematical physics. As I’ve encountered new structures, I’ve attempted to augment this map along two dimensions: a structure dimension that aims to measure the number of attributes an algebraic object has, and a specificity dimension which measures the amount of constraints placed on each attribute. For instance, a Magma has more structure than a set, because a new attribute - a binary operator - has been added. A group, though, is roughly similar in structure to a magma, but has more properties of the binary operator specified, such as associativity, inverses, and identity, which make it more specific (and the magma more general). 2 Relationship of various algebraic structures. The diagram above aims to show how an algebra is constructed from a set, though admittedly omits several algebraic structures along the way. I’ve attempted to include the most primary objects used or seen in mathematical physics. I should also note, this diagram is intended as a quick-reference, and isn’t a substitute for opening Hungerford! 3 N. Jeevanjee, An Introduction to Tensors and Group Theory for Physicists (Springer Science+Business Media, New York, NY, 2015). ↩︎ S. Roman, Advanced Linear Algebra, 3rd ed (Springer, New York, 2007). ↩︎ T. W. Hungerford, Algebra, Corr. 8th print (Springer, New York, 2003). ↩︎ ","date":"2020-03-15","objectID":"/posts/algebra-ladder/:0:0","tags":["Math","Algebra","Group Theory"],"title":"Algebra Ladder","uri":"/posts/algebra-ladder/"},{"categories":["Code"],"content":"Motivation Python has increased in popularity to near ubiquity in the past five years. While the Python community (correctly) professes simplicity as a major accomplishment of the language, I still get a lot of questions about how to get a python environment setup properly. There are some lengthy guides out there on this - this post will aim to summarize and explain the relevant components to getting started. Note: skip to bottom if you want quick install commands ","date":"2019-07-02","objectID":"/posts/setup-guide/:1:0","tags":["Python","Environments"],"title":"Quick Python Setup","uri":"/posts/setup-guide/"},{"categories":["Code"],"content":"The Pieces Python is a language. Combination of syntax rules, semantics, keyword commands, an interpreter that can execute code abiding the rules. package is a self-contained, reusable piece of python code. Often a directory containing one or more python files (or more subdirectories). One typically packages python code in order to share it. There are some packages that come with the language itself (called “builtin”) and others that users can install optionally (called “3rd party” packages) environment is a combination of a Python installation and a collection of packages. Pip can only install python packages - not any precompiled binaries (conda can do that!) conda is a 3rd party package manager, and frankly I find it superior to pip in almost every way. It can install packages in a variety of languages, precompiled binaries (meaning numpy will install much faster). miniconda is an environment that contains bare-bones packages only, including the conda package manager. Anaconda is an environment that contains a large amount of packages, aimed at scientific computing (such as numpy, scipy, etc) ","date":"2019-07-02","objectID":"/posts/setup-guide/:1:1","tags":["Python","Environments"],"title":"Quick Python Setup","uri":"/posts/setup-guide/"},{"categories":["Code"],"content":"The Process Recall that this guide is designed for novice-users, or as a reference for other users. I will assume that the user is able to use a desktop GUI (not headless). Using Pip (not recommended) Install python using the os-specific Python installation programs. I recommend installing the latest version of Python 3.*, since most new packages do not include support for older versions of 2.7. The program will install all the base packages you require, including pip. At which point you can open up a command line (terminal on Mac or CMD on Win), and use commands like pip install x to install a package named “x” (for more pip commands see the docs). Using Conda (recommended) Install miniconda using the install program. Once installed, create your Python environment by doing the following: conda create --name env1 python=3.7 (you can replace “env1” with the preferred name of the environment, probably something related to your current coding project. You can also replace “3.7” with whatever version of python you want to use) This will do some thinking then print a list of packages that will be installed, accept this by typing Y Your environment is created! You can activate this environment (on Mac/Linux by using source activate env1 or on Win by using activate env1). Now that you are “in” the environment you created, you can install other packages into the environment using conda install x to install package “x” You can also install other packages from a text file using conda install --file requirements.txt, where “requirements.txt” is the requirements file containing a list of package names (one on each line). There are, of course, more complicated options available using conda, for those see the conda cheat sheet ","date":"2019-07-02","objectID":"/posts/setup-guide/:1:2","tags":["Python","Environments"],"title":"Quick Python Setup","uri":"/posts/setup-guide/"},{"categories":["Code"],"content":"TL;DR - Get Python Setup The below steps give a quick, general-purpose environment setup. Install miniconda conda create --name env1 python=3.7 source activate env1 conda install numpy scipy pandas The “env1” directory will be installed in the user x directory (~/.anaconda on Mac or C:\\Users\\x\\.anaconda on Win). If you are using a python editor (like PyCharm) that wants to be “pointed” to the environment, then you will configure it to look at the “env1” directory under the “.anaconda” folder. ","date":"2019-07-02","objectID":"/posts/setup-guide/:2:0","tags":["Python","Environments"],"title":"Quick Python Setup","uri":"/posts/setup-guide/"},{"categories":["Code"],"content":"Conda env shortcut It is also possible to create a clickable shortcut to the conda environment, see the docs for more. ","date":"2019-07-02","objectID":"/posts/setup-guide/:3:0","tags":["Python","Environments"],"title":"Quick Python Setup","uri":"/posts/setup-guide/"},{"categories":["Books"],"content":"Summary I picked up a copy of Nadir Jeevnajee’s An Introduction to Tensors and Group Theory for Physicists a few months ago with the intent of skimming through and spending most of my time in reference texts. To my pleasant surprise, I found this text to be self contained - requiring little to no references. The presentation is at once mathematically rigorous and physically intuitive, alluding to well-known examples from physics throughout. I’ve found this text to be such a great introduction to tensors that I have even recommended it to computer-scientist colleagues of mine who have no interest in physics. I whole-heartedly recommend it to anyone interesting in becoming more familiar with tensors and elementary group / representation theory. ","date":"2019-06-28","objectID":"/posts/book-jeevanjee/:1:0","tags":["Physics","Math","Algebra","Group Theory"],"title":"Book Review: Tensors and Group Theory for Physicists (Jeevanjee)","uri":"/posts/book-jeevanjee/"},{"categories":["Books"],"content":"Part I: Tensors The presentation of tensors as multilinear functions achieves a remarkable degree of exposition, and arrives at all the more heuristic definitions of tensors as derived from the simple multilinear-map definitions. This gave the impression of a more solid ground basis for many subsequent tensorial notations and usages. The derivation of commonly assumed definitions is most satisfying. Specifically, the definitions of the adjoint operator and tensor product are much simpler than the more commonly given “behavioral” definitions presented in physics. I appreciated the rigorous yet succinct treatment of the tensor and wedge products. ","date":"2019-06-28","objectID":"/posts/book-jeevanjee/:1:1","tags":["Physics","Math","Algebra","Group Theory"],"title":"Book Review: Tensors and Group Theory for Physicists (Jeevanjee)","uri":"/posts/book-jeevanjee/"},{"categories":["Books"],"content":"Part II: Group Theory Though I am still working through the last part of chapter 6, I must admit I found this section to be superbly clear. The methodical, sequential development of topics in Lie theory were especially thoughtful. The presentation of Lie algebra elements as derivatives of Lie group elements yielded the conventional tangent-space definitions nicely. At the same time, Jeevanjee also presents many common groups and the important relations between them, such as the double-cover relationship of SU(2) and SO(3). He also presents the higher-level relations between the various common groups, such as the quantum implications of the Lorentz (improper) group. Good stuff! ","date":"2019-06-28","objectID":"/posts/book-jeevanjee/:1:2","tags":["Physics","Math","Algebra","Group Theory"],"title":"Book Review: Tensors and Group Theory for Physicists (Jeevanjee)","uri":"/posts/book-jeevanjee/"},{"categories":["Books"],"content":"Solutions As I read through the text I’m compiling some solutions. Much to my fortunate suprise, Dr. Jeevanjee has welcomed these solutions as contributions to his solutions manual which he has published on Overleaf here: Solutions Manual. ","date":"2019-06-28","objectID":"/posts/book-jeevanjee/:2:0","tags":["Physics","Math","Algebra","Group Theory"],"title":"Book Review: Tensors and Group Theory for Physicists (Jeevanjee)","uri":"/posts/book-jeevanjee/"},{"categories":["Physics"],"content":"A friend, who focuses primarily on experimental particle physics, recently asked me an interesting question about gravity. Specifically, he asked how the presence of electromagnetic fields impacts the gravitational field. Applying some modern-physics reasoning, he proposed that electromagnetic fields should exert gravitational influence because photons have momentum that can be viewed as mass in special relativity, and should interact gravitationally. I found this idea interesting, if a bit interpretive, and answered with the precise formulation of the impact of the electromagnetic field on the curvature tensor. He suggested I post this response in case anyone else finds it interesting; to colleagues working in classical or quantum gravity this might appear a bit pedestrian. The Einstein field equation (below) is arguably the most famous equation in gravity theory, second perhaps to Newton’s inverse-square law, and despite its seemingly-complex tensorial notation, expresses a beautifully elegant and simple concept. For those less familiar, Einstein’s general relativity reformulates gravitational interaction as a manifestation of the curvature of spacetime. Specifically, Einstein’s formulation makes concrete the relationship between the curvature of spacetime and the mass-energy content of spacetime 1. $$ R_{\\mu\\nu} - \\frac{1}{2}Rg_{\\mu\\nu} + \\Lambda g_{\\mu\\nu} = \\frac{8\\pi G}{c^4}T_{\\mu\\nu} \\quad\\quad\\quad(1) $$ In the above equation (Einstein equation), the left-hand side contains terms related to curvature of spacetime, like the Ricci tensor $R_{\\mu\\nu}$ and the metric $g_{\\mu\\nu}$. The right-hand side contains terms related to energy and matter content, specifically $T_{\\mu\\nu}$. This latter term, called the stress-energy tensor, is where the connection to the electromagnetic field appears. Various forms of matter contribute differently to the stress-energy tensor, and electromagnetic energy is no exception. The equation below outlines the way in which the electromagnetic field contributes to the stress energy density of a particular area of spacetime. $$T^{\\mu\\nu}=\\frac{1}{\\mu_0}[F^{\\mu\\alpha}F^{\\nu}{}_{\\alpha}-\\frac{1}{4}g^{\\mu\\nu} F_{\\alpha\\beta}F^{\\alpha\\beta}]\\quad\\quad\\quad(2)$$ Where $F_{\\mu\\nu}$ is the electromagnetic field tensor, also called the Faraday tensor, where $\\mathbf{E} = E^i e_i$ and $\\mathbf{B} = B^i e_i$ are the familiar electric and magnetic vector fields. Note that in the below, I adopt the $c=1$ convention for convenience 2. $$F^{\\mu\\nu} = \\begin{bmatrix} 0 \u0026 -E^x \u0026 -E^y \u0026 -E^z \\\\\\\\ E^x \u0026 0 \u0026 -B^z \u0026 B^y \\\\\\\\ E^y \u0026 B^z \u0026 0 \u0026 -B^x \\\\\\\\ E^z \u0026 -B^y \u0026 B^x \u0026 0 \\\\\\\\ \\end{bmatrix} \\quad\\quad\\quad(3)$$ Thus, equation (2) tells us how the electromagnetic fields we are familiar with, namely $\\mathbf{E}$ and $\\mathbf{B}$, contribute to the energy density of a region of spacetime. Then equation (1) builds on that result to relate the electromagnetic fields to the curvature of spacetime, which as Einstein revealed, manifests as the gravitational field. So yes, the conventional electromagnetic fields, and the photons that constitute them, impact the gravitational field despite having no rest mass! C. W. Misner, K. S. Thorne, J. A. Wheeler, and D. Kaiser, Gravitation (Princeton University Press, Princeton, N.J, 2017). ↩︎ S. Carroll, Spacetime and Geometry: An Introduction to General Relativity, 3rd ed. (Pearson Education, 2013). ↩︎ ","date":"2019-06-15","objectID":"/posts/gravity-em-field/:0:0","tags":["Gravity"],"title":"Gravity of a Photon","uri":"/posts/gravity-em-field/"},{"categories":["Math"],"content":"I’ve spent time focusing on the best chalkboards and chalks on my tools page, but -until recently- I’ve not spent much time thinking about the last part of the process – erasing. At the suggestion of several colleagues, I played around with several different methods of erasing chalk marks to find which is most effective. The results were decisive. This post outlines the results, and attempts to present a simple test as justification (though my own testing was more extensive). Of the suggestions I was given, I decided to test the methods listed below. Felt erasers were what I had always used, and I think are the standard in many universities across the US. The sponge was an interesting suggestion, in that it has a similar form factor to conventional felt erasers. I was most skeptical of the microfiber towel suggestion. I thought it would feel weird to not have a handle to grab. Felt Eraser Sponge Microfiber Towel To demonstrate the differences between the methods, I drew a fair amount of horizontal lines in different colors (white, blue, yellow, and red). I divided the lines vertically into multiple columns; one column for each method. I took a few images after each pass. A look at the tools pre-erasing, note that they are all chalk-free! Eraser Tools Pre The board after a single pass with each tool. Notice how the felt eraser just smeared the existing lines, but they are still fully recognizable and distinguishable (bad). The sponge did a little better, but made a terrible noise while in contact with the board. Lastly, the microfiber towel surpassed my expectations and the other competitors, erasing nearly all trace of the lines in the first pass! Not only does the towel method erase better than the others, but it produces less dust as well. After 1 Pass The board after 5 passes with each tool. The felt eraser has closed the gap on the other methods, but still doesn’t compare fully. The microfiber towel method: After 5 Passes A quick look at the tools post erasing. The felt eraser has gathered the chalk in highly-clustered places, whereas the microfiber towel has absorbed the chalk in a fairly uniform pattern. This latter observation explains why the towel continues to work well long after the eraser needs to be cleaned, there’s a surface-area advantage! Eraser Tools Post An aside about cleaning up the tools: the microfiber towels are machine-washable (do not use softener, only dry on low or no heat). This is much easier than the felt erasers, which I either had to clap against eachother outdoors, or vacuum with a special nozzle on the vacuum cleaner. Winner: Microfiber Towel! (I won’t go back). If you prefer the form-factor of the felt eraser, wrap it in a microfiber towel! ","date":"2019-05-06","objectID":"/posts/chalkboard-erasing/:0:0","tags":["Math","Tools","Chalk"],"title":"Erasing Efficiently","uri":"/posts/chalkboard-erasing/"},{"categories":["Math"],"content":"What does type (r, s) mean? I’d like to discuss the notation of the tensor type, commonly denoted $(r, s)$ as it relates to the tensor product. Specifically, the ordering of the vector spaces and dual vector spaces involved in the product. The order matters since tensors are typically categorized by the number of vectors and dual vectors they require as arguments. To avoid ambiguity, for a given tensor $T$, I will denote the number of vector arguments as $n_v$ and the number of dual vector arguments as $n_d$. ","date":"2019-04-23","objectID":"/posts/tensor-type-notation/:1:0","tags":["Math","Algebra","Tensors"],"title":"Tensor Type Notation","uri":"/posts/tensor-type-notation/"},{"categories":["Math"],"content":"Preliminaries Before we begin, recall that the dual vector space $V^\\*$ is defined as the set of linear functionals from $V\\rightarrow C$, where $C$ is the field over which $V$ is a vector space. Note, the dual space $V^\\*$ is defined in terms of the vector space $V$. For similar reasons, the topic of dual spaces is introduced after the topic of vector spaces - in other words, epistemologically, the dual space follows the vector space. I only draw attention to this ordering between the vector space and the dual because it informs the aesthetic nature of the notation, as we’ll see. ","date":"2019-04-23","objectID":"/posts/tensor-type-notation/:1:1","tags":["Math","Algebra","Tensors"],"title":"Tensor Type Notation","uri":"/posts/tensor-type-notation/"},{"categories":["Math"],"content":"Conventions The tensor type $(r, s)$ is used to categories tensors based on the number of vectors and dual vectors they consume. Problem is, there is a choice to made between the $r=n_v$ or $r=n_d$ conventions - and this choice isn’t made consistently. As I mentioned above, the epistemological ordering of vectors and dual vectors is unambiguous; dual vectors follow vectors. It therefore seems natural to make the first number $r$ equal the number of vector arguments $n_v$. I’ll call this convention the vector first convention, or “VF” for short. Similarly, I’ll call the opposite convention, of using the number of dual vectors $n_d$ as the first number $r$, the dual first convention, or “DF” for short. ","date":"2019-04-23","objectID":"/posts/tensor-type-notation/:1:2","tags":["Math","Algebra","Tensors"],"title":"Tensor Type Notation","uri":"/posts/tensor-type-notation/"},{"categories":["Math"],"content":"Usage of Conventions Some sources use the VF convention. 1 2 More sources use the DF convention.3 4 5 6 7 8 9 10 11 12 To explicitly make clear the above conventions, the VF convention would define a type $(r, s)$ tensor $T$ as $$T: V_1\\times \\cdot\\cdot\\cdot \\times V_r \\times V^\\*_1 \\times \\cdot\\cdot\\cdot \\times V^\\*_s\\rightarrow C$$ where $V_{i}=V$ and $V^\\*_{i}=V^\\*$ for all $i$. On the other hand, the DF convention would define a type $(r, s)$ tensor $T$ as $$T: V^\\*_1\\times \\cdot\\cdot\\cdot \\times V^\\*_r \\times V_1 \\times \\cdot\\cdot\\cdot \\times V_s\\rightarrow C$$ where again $V_{I}=V$ and $V^\\*_{i}=V^\\*$ for all $i$. ","date":"2019-04-23","objectID":"/posts/tensor-type-notation/:1:3","tags":["Math","Algebra","Tensors"],"title":"Tensor Type Notation","uri":"/posts/tensor-type-notation/"},{"categories":["Math"],"content":"Cartesian vs. Tensor Product Notations The usage of Cartesian products to define the domain of $T$ is typically used before introducing the tensor product, as it is more familiar. In the Cartesian product notation, the VF convention places the vector spaces before the dual spaces, and in some sense is “aligned” with the way in which the subject is taught. When using the tensor product notation, however, this is no longer the case! Recall the tensor product of two vector spaces $V$ and $W$ is denoted $V\\otimes W$ and is the set of all multilinear functions from $V^\\* \\times W^\\* \\rightarrow C$. Notice how the usage of the tensor product $\\otimes$ essentially replaces vector spaces with their duals in the Cartesian notation. This “replacement” effect combined with only using the spaces $V$ and $V^\\*$ amounts to reversing the order of the input spaces the domain. For example, the VF convention would define a type $(r, s)$ tensor $T$ using the tensor product notation as $$T: V^\\*_1\\otimes \\cdot\\cdot\\cdot \\otimes V^\\*_r \\otimes V_1 \\otimes \\cdot\\cdot\\cdot \\otimes V_s\\rightarrow C$$ For good measure, I will also note that the DF convention would define a type $(r, s)$ tensor $T$ using the tensor product notation as $$T: V_1\\otimes \\cdot\\cdot\\cdot \\otimes V_r \\otimes V^\\*_1 \\otimes \\cdot\\cdot\\cdot \\otimes V^\\*_s\\rightarrow C$$ Notice that these definitions are equivalent to the previous definitions using Cartesian product notation, but that now the vector spaces are written first in what we called the dual first convention, not the vector first convention! ","date":"2019-04-23","objectID":"/posts/tensor-type-notation/:2:0","tags":["Math","Algebra","Tensors"],"title":"Tensor Type Notation","uri":"/posts/tensor-type-notation/"},{"categories":["Math"],"content":"Why is DF convention preferred? It seems that the $DF$ convention has wider usage and appeal; naturally I wonder why. Since it feels natural to align the notation with the epistemological order, in other words, to write $V$ before $V^\\*$, then I am forced to conclude that the mathematical community, with malice of forethought, prefers to base the definition of a type $(r, s)$ tensor on the tensor product notation, rather than the Cartesian notation, since the former requires that $V$ be written before $V^\\*$. I personally have no objection to the choice, as it seems sensible. ","date":"2019-04-23","objectID":"/posts/tensor-type-notation/:3:0","tags":["Math","Algebra","Tensors"],"title":"Tensor Type Notation","uri":"/posts/tensor-type-notation/"},{"categories":["Math"],"content":"Parting note on terminology In the DF convention, the number $r$ is often referred to as the covariant number and the number $s$ is called the contravariant number. These terms refer to the number of dual vectors and vectors respectively, since vectors are typically considered contravariant. Similar terms refer to lower and upper indices respectively. I should note that my exploration of these conventions is limited to differential geometry, relativity, and linear algebra texts. N. Jeevanjee, An Introduction to Tensors and Group Theory for Physicists (Springer Science+Business Media, New York, NY, 2015). ↩︎ S. Lang, Linear Algebra, 3rd ed (Springer-Verlag, New York, 1987). ↩︎ L. W. Tu, Differential Geometry: Connections, Curvature, and Characteristic Classes (Springer Science+Business Media, New York, NY, 2017). ↩︎ C. W. Misner, K. S. Thorne, J. A. Wheeler, and D. Kaiser, Gravitation (Princeton University Press, Princeton, N.J, 2017). ↩︎ B. C. Hall, Lie Groups, Lie Algebras, and Representations: An Elementary Introduction, Second edition (Springer, Cham ; New York, 2015). ↩︎ P. Renteln, Manifolds, Tensors, and Forms: An Introduction for Mathematicians and Physicists (Cambridge University Press, Cambridge, UK ; New York, 2014). ↩︎ J. M. Lee, Introduction to Smooth Manifolds, 2nd ed (Springer, New York ; London, 2013). ↩︎ S. Carroll, Spacetime and Geometry: An Introduction to General Relativity, 3rd ed. (Pearson Education, 2013). ↩︎ S. Roman, Advanced Linear Algebra, 3rd ed (Springer, New York, 2007). ↩︎ A. Das, Tensors: The Mathematics of Relativity Theory and Continuum Mechanics (Springer, New York, 2007). ↩︎ E. Poisson, A Relativist’s Toolkit: The Mathematics of Black-Hole Mechanics (Cambridge University Press, Cambridge, UK ; New York, 2004). ↩︎ M. Spivak, A Comprehensive Introduction to Differential Geometry, 3rd ed (Publish or Perish, Inc, Houston, Tex, 1999). ↩︎ ","date":"2019-04-23","objectID":"/posts/tensor-type-notation/:3:1","tags":["Math","Algebra","Tensors"],"title":"Tensor Type Notation","uri":"/posts/tensor-type-notation/"},{"categories":["Math"],"content":"The introduction to tensor products and tensor algebras is often riddled with rigor, in which a mathematician would delight but a programmer would despair. I find myself in the intersection of these camps and while I appreciate notation, a simpler introduction is possible using functional programming concepts. Tensors are defined and introduced in two equivalent ways. The first way, called the “expansion coefficient” (or array) style of introducing tensors relies on many indices and iterates over the n dimensions of some array (n-dimensional generalization of a matrix). I have found this approach to be overly cluttered; missing the forest for the trees. Instead, I prefer the second way of defining tensors, namely as “multilinear maps”. 1 2 This technique focuses on functions and interfaces, as opposed to components, and will be the chosen method of explaining below. Before we begin, a brief note about preferences between the “coefficient” and “multilinear” approaches. The latter way has found greater resonance with mathematicians, while programmers often find the former more comforting. I believe this is caused by an over-reliance on data structures as atomic units of understanding. True, it is natural as a developer to ask “but what is the object”; however, using more functional-programming style of thought, the multilinear map approach is actually simpler! No need to keep track of various coefficients on various axes of some imaginary n-dimensional array (leave that to numpy). In the below, I outline a functional-programming style analogy for tensors, and the tensor product. Thought the below snippets are in python, some details are left to the imagination (i.e. this code is not a script). ","date":"2019-04-15","objectID":"/posts/tensor-product-programmer/:0:0","tags":["Math","Algebra","Tensors"],"title":"Tensor Product for Programmers","uri":"/posts/tensor-product-programmer/"},{"categories":["Math"],"content":"Setting the Stage Before we get to define tensors, we need to briefly define a few building blocks. First, there is a field $C$, commonly the reals $\\mathbb{R}$, occasionally the complex numbers $\\mathbb{C}$. Members of $C$ are called scalars and are represented in the code by the type scalar. Second, there are vector spaces $V$ over this field, with the usual properties of closure under addition and scalar multiplication. Elements of $V$ are of type vector. Note, I am not specifying a vector as a tuple of scalars - though that is a valid vector space, there are others based on non-tuple like entities, like the vector space of square-integrable functions! The last piece of machinery is the dual space $V^{\\*}$. If you’re not familiar with the dual space, it is essentially the set of all linear functions that take 1 vector and spit out a scalar (specifically $V^* = \\{f: V\\rightarrow C\\}$ where $f$ is linear). Elements of $V^*$ are of type dual. ","date":"2019-04-15","objectID":"/posts/tensor-product-programmer/:1:0","tags":["Math","Algebra","Tensors"],"title":"Tensor Product for Programmers","uri":"/posts/tensor-product-programmer/"},{"categories":["Math"],"content":"Some dual vectors Recall that dual vectors are functions that take a vector and return a scalar. Let $f, g \\in V^*$. In code: def f(v: vector) -\u003e scalar: pass def g(w: vector) -\u003e scalar: pass ","date":"2019-04-15","objectID":"/posts/tensor-product-programmer/:2:0","tags":["Math","Algebra","Tensors"],"title":"Tensor Product for Programmers","uri":"/posts/tensor-product-programmer/"},{"categories":["Math"],"content":"Tensor Product Now let’s define the tensor product of $f$ and $g$ as $h = f \\otimes g$. What this amounts to, is combining the functional interface into a new, single tensor (function), that curries to the functions it was made from! Specifically: def h(a: vector, b: vector) -\u003e scalar: return f(a) * g(b) In some sense, the tensor (or outer) product is like a concatenation operation, that joins functions together, using the superset of arguments, and passing those arguments back to the original functions returning a scalar! This definition is easy! N. Jeevanjee, An Introduction to Tensors and Group Theory for Physicists (Springer Science+Business Media, New York, NY, 2015). ↩︎ S. Roman, Advanced Linear Algebra, 3rd ed (Springer, New York, 2007). ↩︎ ","date":"2019-04-15","objectID":"/posts/tensor-product-programmer/:3:0","tags":["Math","Algebra","Tensors"],"title":"Tensor Product for Programmers","uri":"/posts/tensor-product-programmer/"}]