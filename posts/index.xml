<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Jim W. Kennington</title><link>http://locallytrivial.com/posts/</link><description>All Posts | Jim W. Kennington</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>jameswkennington@psu.edu (Jim Kennington)</managingEditor><webMaster>jameswkennington@psu.edu (Jim Kennington)</webMaster><lastBuildDate>Sat, 23 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://locallytrivial.com/posts/" rel="self" type="application/rss+xml"/><item><title>Migration to Hugo</title><link>http://locallytrivial.com/posts/migration-to-hugo/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/migration-to-hugo/</guid><description>Motivation With the ebb of workload from first year graduate courses, I decided to rekindle the blog that I had setup a couple years prior. As a former professional Python developer, I had chosen Pelican as my static site generator (SSG) in late 2018. The set of plugins looked sufficient, and I could always write my own if needed. Fast-forward to this week, and the situation is different. The Hugo community has grown, broadened, and supported more use cases.</description></item><item><title>Standup, Hugo! Creating a Blog with Hugo</title><link>http://locallytrivial.com/posts/standup-hugo/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/standup-hugo/</guid><description><![CDATA[Preliminaries Let&rsquo;s quickly review what you&rsquo;ll need to build a Hugo blog, and what it will mean to have a Hugo blog at the end of the process.
What You&rsquo;ll Need Before we begin, you&rsquo;ll need a few things. I&rsquo;ll list the essentials below (as well as my recommendations where relevant)
Git, the ubiquitous VCS of the era GitHub account, for storing your blog content (and hosting for free!) Text Editor, for writing content and editing configuration files (I recommend either Sublime Text for simple uses or GoLand for those who also need to edit GO code for plugins) What You&rsquo;ll Have By the end of this post, the hope is that you will have:]]></description></item><item><title>Fermi Problem: Galactic Spaghetti</title><link>http://locallytrivial.com/posts/fermi-friday-20211008/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/fermi-friday-20211008/</guid><description>Often in discussions about blackholes, the question arises of observer experience when falling into a blackhole. Due to the extreme tidal forces experienced along such a path, the observer would be stretched out - a process colloquially referred to as spaghettification. This week I would like to look at a happier use for spaghetti near blackholes. If an observer in a stable circular orbit around the supermassive blackhole at the center of our galaxy were to use spaghetti as a tether, how much spaghetti would be required?</description></item><item><title>Fermi Problem: Baseball Blackhole</title><link>http://locallytrivial.com/posts/fermi-friday-20210924/</link><pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/fermi-friday-20210924/</guid><description>The question of interest this week is:
If all baseballs ever used in an MLB game were compressed into a blackhole, how large would the blackhole be?
To estimate the blackhole radius $r_{BH}$, we&amp;rsquo;ll need to compute the number of baseballs used in MLB games, translate that number to a total mass, then compute the blackhole radius of the corresponding mass.
Counting Baseballs We begin with a lower-bound on the number of baseballs used in all MLB games.</description></item><item><title>Found This Week #1</title><link>http://locallytrivial.com/posts/ftw-20210919/</link><pubDate>Sun, 19 Sep 2021 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/ftw-20210919/</guid><description>As this is the inaugural issue of the found-this-week series, I&amp;rsquo;ll briefly note my motivation and inspiration. The title of this series is an overt nod to the famous series This Week&amp;rsquo;s Finds written by the inimitable John Baez. I have learned a great deal from that series and his book on gravity, and have the utmost admiration for Baez&amp;rsquo; abilities as a physicist and communicator. It is my hope that this series will be found useful by some, insightful by at least a few, and accessible by many.</description></item><item><title>Fermi Problem: A Different Manhattan Project</title><link>http://locallytrivial.com/posts/fermi-friday-20210917/</link><pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/fermi-friday-20210917/</guid><description>For this week&amp;rsquo;s installment of Fermi estimation, the question of interest is:
How fast would the sun burn an amount of hydrogen equivalent to the above-ground mass of Manhattan?
To estimate the burn-time we&amp;rsquo;ll need to guess at a few quantities: the above-ground mass of Manhattan, the solar luminosity (total energy emitted from the sun), and fraction of energy emitted from the core of the sun that makes it to the surface.</description></item><item><title>Blog Reboot</title><link>http://locallytrivial.com/posts/reboot/</link><pubDate>Sun, 12 Sep 2021 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/reboot/</guid><description><![CDATA[After completing the first year of graduate school (post on the industry $\to$ grad school transition forthcoming), I&rsquo;ve finally got time to reboot the blog, with more focus. I&rsquo;ll be posting on a $\sim$weekly basis about the interesting topics I come across in the course of research, class, and general academic meandering. Renewed areas of focus will include various mathematical, physical, or programming topics, such as:
Unravelling bundles (as in fibre bundles) Wormhole solutions in GR and energy conditions Managing environments in Python and developer workflows Fermi Figures - playful posts about solving various back-of-the-envelope questions Enthralling Theorem - spotlight of an interesting theorem / mathematical fact Found this week - weekly interesting discoveries, clearly and heavily inspired by the famous &ldquo;This week&rsquo;s finds&rdquo; - an asymptote I only hope to approach over time.]]></description></item><item><title>Algebra Ladder</title><link>http://locallytrivial.com/posts/algebra-ladder/</link><pubDate>Sun, 15 Mar 2020 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/algebra-ladder/</guid><description><![CDATA[I first encountered a diagram of algebraic structures at the end of Jeevanjee&rsquo;s second chapter, &ldquo;Vector Spaces&rdquo;, which elegantly summarizes the high-level differences in structure between sets, vector spaces, and inner product spaces. 1
This diagram was immensely helpful to me, in that it helped show the relationships between various commonly used objects in mathematical physics. As I&rsquo;ve encountered new structures, I&rsquo;ve attempted to augment this map along two dimensions: a structure dimension that aims to measure the number of attributes an algebraic object has, and a specificity dimension which measures the amount of constraints placed on each attribute.]]></description></item><item><title>Quick Python Setup</title><link>http://locallytrivial.com/posts/setup-guide/</link><pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/setup-guide/</guid><description>Motivation Python has increased in popularity to near ubiquity in the past five years. While the Python community (correctly) professes simplicity as a major accomplishment of the language, I still get a lot of questions about how to get a python environment setup properly. There are some lengthy guides out there on this - this post will aim to summarize and explain the relevant components to getting started.
Note: skip to bottom if you want quick install commands</description></item><item><title>Book Review: Tensors and Group Theory for Physicists (Jeevanjee)</title><link>http://locallytrivial.com/posts/book-jeevanjee/</link><pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/book-jeevanjee/</guid><description>Summary I picked up a copy of Nadir Jeevnajee&amp;rsquo;s An Introduction to Tensors and Group Theory for Physicists a few months ago with the intent of skimming through and spending most of my time in reference texts. To my pleasant surprise, I found this text to be self contained - requiring little to no references. The presentation is at once mathematically rigorous and physically intuitive, alluding to well-known examples from physics throughout.</description></item></channel></rss>