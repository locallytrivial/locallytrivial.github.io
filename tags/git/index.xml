<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Git - Tag - Jim W. Kennington</title><link>http://locallytrivial.com/tags/git/</link><description>Git - Tag - Jim W. Kennington</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>jameswkennington@psu.edu (Jim Kennington)</managingEditor><webMaster>jameswkennington@psu.edu (Jim Kennington)</webMaster><lastBuildDate>Mon, 04 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://locallytrivial.com/tags/git/" rel="self" type="application/rss+xml"/><item><title>Namespacing SSH Credentials with Git</title><link>http://locallytrivial.com/posts/20240304-ssh-git-namespaces/</link><pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate><author>jameswkennington@psu.edu (Jim Kennington)</author><guid>http://locallytrivial.com/posts/20240304-ssh-git-namespaces/</guid><description>Why Namespace SSH Credentials with Git? Why would you ever want to namespace your SSH credentials with Git? If you have multiple accounts on the same Git hosting service, you might want to use different SSH keys for each account. This is a common scenario for developers who have both personal and work accounts on GitHub, GitLab, or Bitbucket. This post will show you how to set up SSH namespaces with Git, so you can use different SSH keys for different accounts on various hosting services.</description></item></channel></rss>